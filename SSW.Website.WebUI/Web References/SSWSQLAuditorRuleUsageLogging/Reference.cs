//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace SSWSQLAuditorRuleUsageLogging {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RuleUsageLoggingServiceSoap", Namespace="http://tempuri.org/")]
    public partial class RuleUsageLoggingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertDatabaseAndStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRankOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDbIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDatabaseAndRuleUsageOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSingleRuleUsageRecordFromSQLAuditorOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSingleRuleUsageRecordFromWebsiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRuleAnalysisDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRuleAnalysisDataSetWithContactIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRuleAgreementStatDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRuleUsageTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRuleUsageCountTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWhoVotedTableForSQLAuditorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWhoVotedTableForWebsiteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RuleUsageLoggingService() {
            this.Url = "http://webservices.internal.ssw.com.au/SSWSQLAuditorRuleUsageLogging/SQLAuditorDa" +
                "taAnalysisService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertDatabaseAndStatsCompletedEventHandler InsertDatabaseAndStatsCompleted;
        
        /// <remarks/>
        public event GetRankCompletedEventHandler GetRankCompleted;
        
        /// <remarks/>
        public event GetDbIDCompletedEventHandler GetDbIDCompleted;
        
        /// <remarks/>
        public event InsertDatabaseAndRuleUsageCompletedEventHandler InsertDatabaseAndRuleUsageCompleted;
        
        /// <remarks/>
        public event InsertSingleRuleUsageRecordFromSQLAuditorCompletedEventHandler InsertSingleRuleUsageRecordFromSQLAuditorCompleted;
        
        /// <remarks/>
        public event InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactCompletedEventHandler InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactCompleted;
        
        /// <remarks/>
        public event InsertSingleRuleUsageRecordFromWebsiteCompletedEventHandler InsertSingleRuleUsageRecordFromWebsiteCompleted;
        
        /// <remarks/>
        public event GetRuleAnalysisDataSetCompletedEventHandler GetRuleAnalysisDataSetCompleted;
        
        /// <remarks/>
        public event GetRuleAnalysisDataSetWithContactIDCompletedEventHandler GetRuleAnalysisDataSetWithContactIDCompleted;
        
        /// <remarks/>
        public event GetRuleAgreementStatDataSetCompletedEventHandler GetRuleAgreementStatDataSetCompleted;
        
        /// <remarks/>
        public event UpdateRuleUsageTableCompletedEventHandler UpdateRuleUsageTableCompleted;
        
        /// <remarks/>
        public event UpdateRuleUsageCountTableCompletedEventHandler UpdateRuleUsageCountTableCompleted;
        
        /// <remarks/>
        public event GetWhoVotedTableForSQLAuditorCompletedEventHandler GetWhoVotedTableForSQLAuditorCompleted;
        
        /// <remarks/>
        public event GetWhoVotedTableForWebsiteCompletedEventHandler GetWhoVotedTableForWebsiteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDatabaseAndStats", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertDatabaseAndStats(System.Data.DataSet usageDS) {
            object[] results = this.Invoke("InsertDatabaseAndStats", new object[] {
                        usageDS});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDatabaseAndStatsAsync(System.Data.DataSet usageDS) {
            this.InsertDatabaseAndStatsAsync(usageDS, null);
        }
        
        /// <remarks/>
        public void InsertDatabaseAndStatsAsync(System.Data.DataSet usageDS, object userState) {
            if ((this.InsertDatabaseAndStatsOperationCompleted == null)) {
                this.InsertDatabaseAndStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDatabaseAndStatsOperationCompleted);
            }
            this.InvokeAsync("InsertDatabaseAndStats", new object[] {
                        usageDS}, this.InsertDatabaseAndStatsOperationCompleted, userState);
        }
        
        private void OnInsertDatabaseAndStatsOperationCompleted(object arg) {
            if ((this.InsertDatabaseAndStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDatabaseAndStatsCompleted(this, new InsertDatabaseAndStatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRank(int Complexity) {
            object[] results = this.Invoke("GetRank", new object[] {
                        Complexity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRankAsync(int Complexity) {
            this.GetRankAsync(Complexity, null);
        }
        
        /// <remarks/>
        public void GetRankAsync(int Complexity, object userState) {
            if ((this.GetRankOperationCompleted == null)) {
                this.GetRankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRankOperationCompleted);
            }
            this.InvokeAsync("GetRank", new object[] {
                        Complexity}, this.GetRankOperationCompleted, userState);
        }
        
        private void OnGetRankOperationCompleted(object arg) {
            if ((this.GetRankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRankCompleted(this, new GetRankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDbID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDbID(int Complexity, string DataBaseName, string ComputerName) {
            object[] results = this.Invoke("GetDbID", new object[] {
                        Complexity,
                        DataBaseName,
                        ComputerName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDbIDAsync(int Complexity, string DataBaseName, string ComputerName) {
            this.GetDbIDAsync(Complexity, DataBaseName, ComputerName, null);
        }
        
        /// <remarks/>
        public void GetDbIDAsync(int Complexity, string DataBaseName, string ComputerName, object userState) {
            if ((this.GetDbIDOperationCompleted == null)) {
                this.GetDbIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDbIDOperationCompleted);
            }
            this.InvokeAsync("GetDbID", new object[] {
                        Complexity,
                        DataBaseName,
                        ComputerName}, this.GetDbIDOperationCompleted, userState);
        }
        
        private void OnGetDbIDOperationCompleted(object arg) {
            if ((this.GetDbIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDbIDCompleted(this, new GetDbIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDatabaseAndRuleUsage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertDatabaseAndRuleUsage(System.Data.DataSet usageDS) {
            object[] results = this.Invoke("InsertDatabaseAndRuleUsage", new object[] {
                        usageDS});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDatabaseAndRuleUsageAsync(System.Data.DataSet usageDS) {
            this.InsertDatabaseAndRuleUsageAsync(usageDS, null);
        }
        
        /// <remarks/>
        public void InsertDatabaseAndRuleUsageAsync(System.Data.DataSet usageDS, object userState) {
            if ((this.InsertDatabaseAndRuleUsageOperationCompleted == null)) {
                this.InsertDatabaseAndRuleUsageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDatabaseAndRuleUsageOperationCompleted);
            }
            this.InvokeAsync("InsertDatabaseAndRuleUsage", new object[] {
                        usageDS}, this.InsertDatabaseAndRuleUsageOperationCompleted, userState);
        }
        
        private void OnInsertDatabaseAndRuleUsageOperationCompleted(object arg) {
            if ((this.InsertDatabaseAndRuleUsageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDatabaseAndRuleUsageCompleted(this, new InsertDatabaseAndRuleUsageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSingleRuleUsageRecordFromSQLAuditor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertSingleRuleUsageRecordFromSQLAuditor(int SARuleID, int ruleOpinionID) {
            object[] results = this.Invoke("InsertSingleRuleUsageRecordFromSQLAuditor", new object[] {
                        SARuleID,
                        ruleOpinionID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSingleRuleUsageRecordFromSQLAuditorAsync(int SARuleID, int ruleOpinionID) {
            this.InsertSingleRuleUsageRecordFromSQLAuditorAsync(SARuleID, ruleOpinionID, null);
        }
        
        /// <remarks/>
        public void InsertSingleRuleUsageRecordFromSQLAuditorAsync(int SARuleID, int ruleOpinionID, object userState) {
            if ((this.InsertSingleRuleUsageRecordFromSQLAuditorOperationCompleted == null)) {
                this.InsertSingleRuleUsageRecordFromSQLAuditorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSingleRuleUsageRecordFromSQLAuditorOperationCompleted);
            }
            this.InvokeAsync("InsertSingleRuleUsageRecordFromSQLAuditor", new object[] {
                        SARuleID,
                        ruleOpinionID}, this.InsertSingleRuleUsageRecordFromSQLAuditorOperationCompleted, userState);
        }
        
        private void OnInsertSingleRuleUsageRecordFromSQLAuditorOperationCompleted(object arg) {
            if ((this.InsertSingleRuleUsageRecordFromSQLAuditorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSingleRuleUsageRecordFromSQLAuditorCompleted(this, new InsertSingleRuleUsageRecordFromSQLAuditorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContact", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContact(int SARuleID, int ruleOpinionID, int sswContactID) {
            object[] results = this.Invoke("InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContact", new object[] {
                        SARuleID,
                        ruleOpinionID,
                        sswContactID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactAsync(int SARuleID, int ruleOpinionID, int sswContactID) {
            this.InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactAsync(SARuleID, ruleOpinionID, sswContactID, null);
        }
        
        /// <remarks/>
        public void InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactAsync(int SARuleID, int ruleOpinionID, int sswContactID, object userState) {
            if ((this.InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactOperationCompleted == null)) {
                this.InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactOperationCompleted);
            }
            this.InvokeAsync("InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContact", new object[] {
                        SARuleID,
                        ruleOpinionID,
                        sswContactID}, this.InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactOperationCompleted, userState);
        }
        
        private void OnInsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactOperationCompleted(object arg) {
            if ((this.InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactCompleted(this, new InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSingleRuleUsageRecordFromWebsite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertSingleRuleUsageRecordFromWebsite(string websiteRuleID, string ruleOpinionID, int sswContactID) {
            object[] results = this.Invoke("InsertSingleRuleUsageRecordFromWebsite", new object[] {
                        websiteRuleID,
                        ruleOpinionID,
                        sswContactID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSingleRuleUsageRecordFromWebsiteAsync(string websiteRuleID, string ruleOpinionID, int sswContactID) {
            this.InsertSingleRuleUsageRecordFromWebsiteAsync(websiteRuleID, ruleOpinionID, sswContactID, null);
        }
        
        /// <remarks/>
        public void InsertSingleRuleUsageRecordFromWebsiteAsync(string websiteRuleID, string ruleOpinionID, int sswContactID, object userState) {
            if ((this.InsertSingleRuleUsageRecordFromWebsiteOperationCompleted == null)) {
                this.InsertSingleRuleUsageRecordFromWebsiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSingleRuleUsageRecordFromWebsiteOperationCompleted);
            }
            this.InvokeAsync("InsertSingleRuleUsageRecordFromWebsite", new object[] {
                        websiteRuleID,
                        ruleOpinionID,
                        sswContactID}, this.InsertSingleRuleUsageRecordFromWebsiteOperationCompleted, userState);
        }
        
        private void OnInsertSingleRuleUsageRecordFromWebsiteOperationCompleted(object arg) {
            if ((this.InsertSingleRuleUsageRecordFromWebsiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSingleRuleUsageRecordFromWebsiteCompleted(this, new InsertSingleRuleUsageRecordFromWebsiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRuleAnalysisDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RuleAnalysisDataSet GetRuleAnalysisDataSet() {
            object[] results = this.Invoke("GetRuleAnalysisDataSet", new object[0]);
            return ((RuleAnalysisDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRuleAnalysisDataSetAsync() {
            this.GetRuleAnalysisDataSetAsync(null);
        }
        
        /// <remarks/>
        public void GetRuleAnalysisDataSetAsync(object userState) {
            if ((this.GetRuleAnalysisDataSetOperationCompleted == null)) {
                this.GetRuleAnalysisDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuleAnalysisDataSetOperationCompleted);
            }
            this.InvokeAsync("GetRuleAnalysisDataSet", new object[0], this.GetRuleAnalysisDataSetOperationCompleted, userState);
        }
        
        private void OnGetRuleAnalysisDataSetOperationCompleted(object arg) {
            if ((this.GetRuleAnalysisDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuleAnalysisDataSetCompleted(this, new GetRuleAnalysisDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRuleAnalysisDataSetWithContactID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RuleAnalysis_V2_DataSet GetRuleAnalysisDataSetWithContactID(int contactID) {
            object[] results = this.Invoke("GetRuleAnalysisDataSetWithContactID", new object[] {
                        contactID});
            return ((RuleAnalysis_V2_DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRuleAnalysisDataSetWithContactIDAsync(int contactID) {
            this.GetRuleAnalysisDataSetWithContactIDAsync(contactID, null);
        }
        
        /// <remarks/>
        public void GetRuleAnalysisDataSetWithContactIDAsync(int contactID, object userState) {
            if ((this.GetRuleAnalysisDataSetWithContactIDOperationCompleted == null)) {
                this.GetRuleAnalysisDataSetWithContactIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuleAnalysisDataSetWithContactIDOperationCompleted);
            }
            this.InvokeAsync("GetRuleAnalysisDataSetWithContactID", new object[] {
                        contactID}, this.GetRuleAnalysisDataSetWithContactIDOperationCompleted, userState);
        }
        
        private void OnGetRuleAnalysisDataSetWithContactIDOperationCompleted(object arg) {
            if ((this.GetRuleAnalysisDataSetWithContactIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuleAnalysisDataSetWithContactIDCompleted(this, new GetRuleAnalysisDataSetWithContactIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRuleAgreementStatDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RuleAgreementDataSet GetRuleAgreementStatDataSet() {
            object[] results = this.Invoke("GetRuleAgreementStatDataSet", new object[0]);
            return ((RuleAgreementDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRuleAgreementStatDataSetAsync() {
            this.GetRuleAgreementStatDataSetAsync(null);
        }
        
        /// <remarks/>
        public void GetRuleAgreementStatDataSetAsync(object userState) {
            if ((this.GetRuleAgreementStatDataSetOperationCompleted == null)) {
                this.GetRuleAgreementStatDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRuleAgreementStatDataSetOperationCompleted);
            }
            this.InvokeAsync("GetRuleAgreementStatDataSet", new object[0], this.GetRuleAgreementStatDataSetOperationCompleted, userState);
        }
        
        private void OnGetRuleAgreementStatDataSetOperationCompleted(object arg) {
            if ((this.GetRuleAgreementStatDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRuleAgreementStatDataSetCompleted(this, new GetRuleAgreementStatDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRuleUsageTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateRuleUsageTable(string cid) {
            object[] results = this.Invoke("UpdateRuleUsageTable", new object[] {
                        cid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRuleUsageTableAsync(string cid) {
            this.UpdateRuleUsageTableAsync(cid, null);
        }
        
        /// <remarks/>
        public void UpdateRuleUsageTableAsync(string cid, object userState) {
            if ((this.UpdateRuleUsageTableOperationCompleted == null)) {
                this.UpdateRuleUsageTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRuleUsageTableOperationCompleted);
            }
            this.InvokeAsync("UpdateRuleUsageTable", new object[] {
                        cid}, this.UpdateRuleUsageTableOperationCompleted, userState);
        }
        
        private void OnUpdateRuleUsageTableOperationCompleted(object arg) {
            if ((this.UpdateRuleUsageTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRuleUsageTableCompleted(this, new UpdateRuleUsageTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRuleUsageCountTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateRuleUsageCountTable(string cid) {
            object[] results = this.Invoke("UpdateRuleUsageCountTable", new object[] {
                        cid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRuleUsageCountTableAsync(string cid) {
            this.UpdateRuleUsageCountTableAsync(cid, null);
        }
        
        /// <remarks/>
        public void UpdateRuleUsageCountTableAsync(string cid, object userState) {
            if ((this.UpdateRuleUsageCountTableOperationCompleted == null)) {
                this.UpdateRuleUsageCountTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRuleUsageCountTableOperationCompleted);
            }
            this.InvokeAsync("UpdateRuleUsageCountTable", new object[] {
                        cid}, this.UpdateRuleUsageCountTableOperationCompleted, userState);
        }
        
        private void OnUpdateRuleUsageCountTableOperationCompleted(object arg) {
            if ((this.UpdateRuleUsageCountTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRuleUsageCountTableCompleted(this, new UpdateRuleUsageCountTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWhoVotedTableForSQLAuditor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWhoVotedTableForSQLAuditor(int SqlAuditorRuleID) {
            object[] results = this.Invoke("GetWhoVotedTableForSQLAuditor", new object[] {
                        SqlAuditorRuleID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWhoVotedTableForSQLAuditorAsync(int SqlAuditorRuleID) {
            this.GetWhoVotedTableForSQLAuditorAsync(SqlAuditorRuleID, null);
        }
        
        /// <remarks/>
        public void GetWhoVotedTableForSQLAuditorAsync(int SqlAuditorRuleID, object userState) {
            if ((this.GetWhoVotedTableForSQLAuditorOperationCompleted == null)) {
                this.GetWhoVotedTableForSQLAuditorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWhoVotedTableForSQLAuditorOperationCompleted);
            }
            this.InvokeAsync("GetWhoVotedTableForSQLAuditor", new object[] {
                        SqlAuditorRuleID}, this.GetWhoVotedTableForSQLAuditorOperationCompleted, userState);
        }
        
        private void OnGetWhoVotedTableForSQLAuditorOperationCompleted(object arg) {
            if ((this.GetWhoVotedTableForSQLAuditorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWhoVotedTableForSQLAuditorCompleted(this, new GetWhoVotedTableForSQLAuditorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWhoVotedTableForWebsite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWhoVotedTableForWebsite(int WebsiteRuleID) {
            object[] results = this.Invoke("GetWhoVotedTableForWebsite", new object[] {
                        WebsiteRuleID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWhoVotedTableForWebsiteAsync(int WebsiteRuleID) {
            this.GetWhoVotedTableForWebsiteAsync(WebsiteRuleID, null);
        }
        
        /// <remarks/>
        public void GetWhoVotedTableForWebsiteAsync(int WebsiteRuleID, object userState) {
            if ((this.GetWhoVotedTableForWebsiteOperationCompleted == null)) {
                this.GetWhoVotedTableForWebsiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWhoVotedTableForWebsiteOperationCompleted);
            }
            this.InvokeAsync("GetWhoVotedTableForWebsite", new object[] {
                        WebsiteRuleID}, this.GetWhoVotedTableForWebsiteOperationCompleted, userState);
        }
        
        private void OnGetWhoVotedTableForWebsiteOperationCompleted(object arg) {
            if ((this.GetWhoVotedTableForWebsiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWhoVotedTableForWebsiteCompleted(this, new GetWhoVotedTableForWebsiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // 此类型定义由 System.Data.Design.TypedDataSetSchemaImporterExtension 架构导入程序扩展生成。
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RuleAnalysisDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    public partial class RuleAnalysisDataSet : global::System.Data.DataSet {
        
        private viewRuleAnalysisDataTable tableviewRuleAnalysis;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public RuleAnalysisDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected RuleAnalysisDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["viewRuleAnalysis"] != null)) {
                    base.Tables.Add(new viewRuleAnalysisDataTable(ds.Tables["viewRuleAnalysis"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public viewRuleAnalysisDataTable viewRuleAnalysis {
            get {
                return this.tableviewRuleAnalysis;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            RuleAnalysisDataSet cln = ((RuleAnalysisDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["viewRuleAnalysis"] != null)) {
                    base.Tables.Add(new viewRuleAnalysisDataTable(ds.Tables["viewRuleAnalysis"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableviewRuleAnalysis = ((viewRuleAnalysisDataTable)(base.Tables["viewRuleAnalysis"]));
            if ((initTable == true)) {
                if ((this.tableviewRuleAnalysis != null)) {
                    this.tableviewRuleAnalysis.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "RuleAnalysisDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RuleAnalysisDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableviewRuleAnalysis = new viewRuleAnalysisDataTable();
            base.Tables.Add(this.tableviewRuleAnalysis);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeviewRuleAnalysis() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RuleAnalysisDataSet ds = new RuleAnalysisDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void viewRuleAnalysisRowChangeEventHandler(object sender, viewRuleAnalysisRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class viewRuleAnalysisDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSQLAuditorRuleID;
            
            private global::System.Data.DataColumn columnSelectedTimes;
            
            private global::System.Data.DataColumn columnTotalTimes;
            
            private global::System.Data.DataColumn columnAgreeTimes;
            
            private global::System.Data.DataColumn columnDisagreeTimes;
            
            private global::System.Data.DataColumn columnTooHardToImplementTimes;
            
            private global::System.Data.DataColumn columnIgnoreTimes;
            
            private global::System.Data.DataColumn columnDontUnderstandTimes;
            
            private global::System.Data.DataColumn _columnRuleID;
            
            private global::System.Data.DataColumn columnImplementedTimes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisDataTable() {
                this.TableName = "viewRuleAnalysis";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal viewRuleAnalysisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected viewRuleAnalysisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SQLAuditorRuleIDColumn {
                get {
                    return this.columnSQLAuditorRuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SelectedTimesColumn {
                get {
                    return this.columnSelectedTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalTimesColumn {
                get {
                    return this.columnTotalTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AgreeTimesColumn {
                get {
                    return this.columnAgreeTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DisagreeTimesColumn {
                get {
                    return this.columnDisagreeTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TooHardToImplementTimesColumn {
                get {
                    return this.columnTooHardToImplementTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IgnoreTimesColumn {
                get {
                    return this.columnIgnoreTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DontUnderstandTimesColumn {
                get {
                    return this.columnDontUnderstandTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn _RuleIDColumn {
                get {
                    return this._columnRuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ImplementedTimesColumn {
                get {
                    return this.columnImplementedTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisRow this[int index] {
                get {
                    return ((viewRuleAnalysisRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event viewRuleAnalysisRowChangeEventHandler viewRuleAnalysisRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event viewRuleAnalysisRowChangeEventHandler viewRuleAnalysisRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event viewRuleAnalysisRowChangeEventHandler viewRuleAnalysisRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event viewRuleAnalysisRowChangeEventHandler viewRuleAnalysisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddviewRuleAnalysisRow(viewRuleAnalysisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisRow AddviewRuleAnalysisRow(int SQLAuditorRuleID, int SelectedTimes, int TotalTimes, int AgreeTimes, int DisagreeTimes, int TooHardToImplementTimes, int IgnoreTimes, int DontUnderstandTimes, int RuleID, int ImplementedTimes) {
                viewRuleAnalysisRow rowviewRuleAnalysisRow = ((viewRuleAnalysisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SQLAuditorRuleID,
                        SelectedTimes,
                        TotalTimes,
                        AgreeTimes,
                        DisagreeTimes,
                        TooHardToImplementTimes,
                        IgnoreTimes,
                        DontUnderstandTimes,
                        RuleID,
                        ImplementedTimes};
                rowviewRuleAnalysisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowviewRuleAnalysisRow);
                return rowviewRuleAnalysisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisRow FindByRuleID(int RuleID) {
                return ((viewRuleAnalysisRow)(this.Rows.Find(new object[] {
                            RuleID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                viewRuleAnalysisDataTable cln = ((viewRuleAnalysisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new viewRuleAnalysisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnSQLAuditorRuleID = base.Columns["SQLAuditorRuleID"];
                this.columnSelectedTimes = base.Columns["SelectedTimes"];
                this.columnTotalTimes = base.Columns["TotalTimes"];
                this.columnAgreeTimes = base.Columns["AgreeTimes"];
                this.columnDisagreeTimes = base.Columns["DisagreeTimes"];
                this.columnTooHardToImplementTimes = base.Columns["TooHardToImplementTimes"];
                this.columnIgnoreTimes = base.Columns["IgnoreTimes"];
                this.columnDontUnderstandTimes = base.Columns["DontUnderstandTimes"];
                this._columnRuleID = base.Columns["RuleID"];
                this.columnImplementedTimes = base.Columns["ImplementedTimes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnSQLAuditorRuleID = new global::System.Data.DataColumn("SQLAuditorRuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQLAuditorRuleID);
                this.columnSelectedTimes = new global::System.Data.DataColumn("SelectedTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectedTimes);
                this.columnTotalTimes = new global::System.Data.DataColumn("TotalTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTimes);
                this.columnAgreeTimes = new global::System.Data.DataColumn("AgreeTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgreeTimes);
                this.columnDisagreeTimes = new global::System.Data.DataColumn("DisagreeTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisagreeTimes);
                this.columnTooHardToImplementTimes = new global::System.Data.DataColumn("TooHardToImplementTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTooHardToImplementTimes);
                this.columnIgnoreTimes = new global::System.Data.DataColumn("IgnoreTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIgnoreTimes);
                this.columnDontUnderstandTimes = new global::System.Data.DataColumn("DontUnderstandTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDontUnderstandTimes);
                this._columnRuleID = new global::System.Data.DataColumn("RuleID", typeof(int), null, global::System.Data.MappingType.Element);
                this._columnRuleID.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_RuleIDColumn");
                this._columnRuleID.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnRuleID");
                this._columnRuleID.ExtendedProperties.Add("Generator_UserColumnName", "RuleID");
                base.Columns.Add(this._columnRuleID);
                this.columnImplementedTimes = new global::System.Data.DataColumn("ImplementedTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImplementedTimes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this._columnRuleID}, true));
                this.columnSQLAuditorRuleID.DefaultValue = ((int)(0));
                this.columnAgreeTimes.DefaultValue = ((int)(0));
                this.columnDisagreeTimes.DefaultValue = ((int)(0));
                this.columnTooHardToImplementTimes.DefaultValue = ((int)(0));
                this.columnIgnoreTimes.DefaultValue = ((int)(0));
                this.columnDontUnderstandTimes.DefaultValue = ((int)(0));
                this._columnRuleID.AllowDBNull = false;
                this._columnRuleID.Unique = true;
                this._columnRuleID.DefaultValue = ((int)(0));
                this.columnImplementedTimes.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisRow NewviewRuleAnalysisRow() {
                return ((viewRuleAnalysisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new viewRuleAnalysisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(viewRuleAnalysisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.viewRuleAnalysisRowChanged != null)) {
                    this.viewRuleAnalysisRowChanged(this, new viewRuleAnalysisRowChangeEvent(((viewRuleAnalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.viewRuleAnalysisRowChanging != null)) {
                    this.viewRuleAnalysisRowChanging(this, new viewRuleAnalysisRowChangeEvent(((viewRuleAnalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.viewRuleAnalysisRowDeleted != null)) {
                    this.viewRuleAnalysisRowDeleted(this, new viewRuleAnalysisRowChangeEvent(((viewRuleAnalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.viewRuleAnalysisRowDeleting != null)) {
                    this.viewRuleAnalysisRowDeleting(this, new viewRuleAnalysisRowChangeEvent(((viewRuleAnalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveviewRuleAnalysisRow(viewRuleAnalysisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RuleAnalysisDataSet ds = new RuleAnalysisDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "viewRuleAnalysisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class viewRuleAnalysisRow : global::System.Data.DataRow {
            
            private viewRuleAnalysisDataTable tableviewRuleAnalysis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal viewRuleAnalysisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableviewRuleAnalysis = ((viewRuleAnalysisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SQLAuditorRuleID {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.SQLAuditorRuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“SQLAuditorRuleID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.SQLAuditorRuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SelectedTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.SelectedTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“SelectedTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.SelectedTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TotalTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.TotalTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“TotalTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.TotalTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int AgreeTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.AgreeTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“AgreeTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.AgreeTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DisagreeTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.DisagreeTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“DisagreeTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.DisagreeTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TooHardToImplementTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.TooHardToImplementTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“TooHardToImplementTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.TooHardToImplementTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int IgnoreTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.IgnoreTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“IgnoreTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.IgnoreTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DontUnderstandTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.DontUnderstandTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“DontUnderstandTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.DontUnderstandTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int RuleID {
                get {
                    return ((int)(this[this.tableviewRuleAnalysis._RuleIDColumn]));
                }
                set {
                    this[this.tableviewRuleAnalysis._RuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ImplementedTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.ImplementedTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“ImplementedTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.ImplementedTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSQLAuditorRuleIDNull() {
                return this.IsNull(this.tableviewRuleAnalysis.SQLAuditorRuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSQLAuditorRuleIDNull() {
                this[this.tableviewRuleAnalysis.SQLAuditorRuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSelectedTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.SelectedTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSelectedTimesNull() {
                this[this.tableviewRuleAnalysis.SelectedTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.TotalTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalTimesNull() {
                this[this.tableviewRuleAnalysis.TotalTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAgreeTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.AgreeTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAgreeTimesNull() {
                this[this.tableviewRuleAnalysis.AgreeTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDisagreeTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.DisagreeTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDisagreeTimesNull() {
                this[this.tableviewRuleAnalysis.DisagreeTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTooHardToImplementTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.TooHardToImplementTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTooHardToImplementTimesNull() {
                this[this.tableviewRuleAnalysis.TooHardToImplementTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIgnoreTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.IgnoreTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIgnoreTimesNull() {
                this[this.tableviewRuleAnalysis.IgnoreTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDontUnderstandTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.DontUnderstandTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDontUnderstandTimesNull() {
                this[this.tableviewRuleAnalysis.DontUnderstandTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImplementedTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.ImplementedTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImplementedTimesNull() {
                this[this.tableviewRuleAnalysis.ImplementedTimesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class viewRuleAnalysisRowChangeEvent : global::System.EventArgs {
            
            private viewRuleAnalysisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisRowChangeEvent(viewRuleAnalysisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // 此类型定义由 System.Data.Design.TypedDataSetSchemaImporterExtension 架构导入程序扩展生成。
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RuleAnalysis_V2_DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    public partial class RuleAnalysis_V2_DataSet : global::System.Data.DataSet {
        
        private viewRuleAnalysisDataTable tableviewRuleAnalysis;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public RuleAnalysis_V2_DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected RuleAnalysis_V2_DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["viewRuleAnalysis"] != null)) {
                    base.Tables.Add(new viewRuleAnalysisDataTable(ds.Tables["viewRuleAnalysis"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public viewRuleAnalysisDataTable viewRuleAnalysis {
            get {
                return this.tableviewRuleAnalysis;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            RuleAnalysis_V2_DataSet cln = ((RuleAnalysis_V2_DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["viewRuleAnalysis"] != null)) {
                    base.Tables.Add(new viewRuleAnalysisDataTable(ds.Tables["viewRuleAnalysis"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableviewRuleAnalysis = ((viewRuleAnalysisDataTable)(base.Tables["viewRuleAnalysis"]));
            if ((initTable == true)) {
                if ((this.tableviewRuleAnalysis != null)) {
                    this.tableviewRuleAnalysis.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "RuleAnalysis_V2_DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RuleAnalysis_V2_DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableviewRuleAnalysis = new viewRuleAnalysisDataTable();
            base.Tables.Add(this.tableviewRuleAnalysis);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeviewRuleAnalysis() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RuleAnalysis_V2_DataSet ds = new RuleAnalysis_V2_DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void viewRuleAnalysisRowChangeEventHandler(object sender, viewRuleAnalysisRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class viewRuleAnalysisDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSQLAuditorRuleID;
            
            private global::System.Data.DataColumn columnSelectedTimes;
            
            private global::System.Data.DataColumn columnTotalTimes;
            
            private global::System.Data.DataColumn columnAgreeTimes;
            
            private global::System.Data.DataColumn columnDisagreeTimes;
            
            private global::System.Data.DataColumn columnTooHardToImplementTimes;
            
            private global::System.Data.DataColumn columnIgnoreTimes;
            
            private global::System.Data.DataColumn columnDontUnderstandTimes;
            
            private global::System.Data.DataColumn columnRuleID;
            
            private global::System.Data.DataColumn columnImplementedTimes;
            
            private global::System.Data.DataColumn columnRuleOpinionID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisDataTable() {
                this.TableName = "viewRuleAnalysis";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal viewRuleAnalysisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected viewRuleAnalysisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SQLAuditorRuleIDColumn {
                get {
                    return this.columnSQLAuditorRuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SelectedTimesColumn {
                get {
                    return this.columnSelectedTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalTimesColumn {
                get {
                    return this.columnTotalTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AgreeTimesColumn {
                get {
                    return this.columnAgreeTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DisagreeTimesColumn {
                get {
                    return this.columnDisagreeTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TooHardToImplementTimesColumn {
                get {
                    return this.columnTooHardToImplementTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IgnoreTimesColumn {
                get {
                    return this.columnIgnoreTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DontUnderstandTimesColumn {
                get {
                    return this.columnDontUnderstandTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RuleIDColumn {
                get {
                    return this.columnRuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ImplementedTimesColumn {
                get {
                    return this.columnImplementedTimes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RuleOpinionIDColumn {
                get {
                    return this.columnRuleOpinionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisRow this[int index] {
                get {
                    return ((viewRuleAnalysisRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event viewRuleAnalysisRowChangeEventHandler viewRuleAnalysisRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event viewRuleAnalysisRowChangeEventHandler viewRuleAnalysisRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event viewRuleAnalysisRowChangeEventHandler viewRuleAnalysisRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event viewRuleAnalysisRowChangeEventHandler viewRuleAnalysisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddviewRuleAnalysisRow(viewRuleAnalysisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisRow AddviewRuleAnalysisRow(int SQLAuditorRuleID, int SelectedTimes, int TotalTimes, int AgreeTimes, int DisagreeTimes, int TooHardToImplementTimes, int IgnoreTimes, int DontUnderstandTimes, int RuleID, int ImplementedTimes, int RuleOpinionID) {
                viewRuleAnalysisRow rowviewRuleAnalysisRow = ((viewRuleAnalysisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SQLAuditorRuleID,
                        SelectedTimes,
                        TotalTimes,
                        AgreeTimes,
                        DisagreeTimes,
                        TooHardToImplementTimes,
                        IgnoreTimes,
                        DontUnderstandTimes,
                        RuleID,
                        ImplementedTimes,
                        RuleOpinionID};
                rowviewRuleAnalysisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowviewRuleAnalysisRow);
                return rowviewRuleAnalysisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisRow FindByRuleID(int RuleID) {
                return ((viewRuleAnalysisRow)(this.Rows.Find(new object[] {
                            RuleID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                viewRuleAnalysisDataTable cln = ((viewRuleAnalysisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new viewRuleAnalysisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnSQLAuditorRuleID = base.Columns["SQLAuditorRuleID"];
                this.columnSelectedTimes = base.Columns["SelectedTimes"];
                this.columnTotalTimes = base.Columns["TotalTimes"];
                this.columnAgreeTimes = base.Columns["AgreeTimes"];
                this.columnDisagreeTimes = base.Columns["DisagreeTimes"];
                this.columnTooHardToImplementTimes = base.Columns["TooHardToImplementTimes"];
                this.columnIgnoreTimes = base.Columns["IgnoreTimes"];
                this.columnDontUnderstandTimes = base.Columns["DontUnderstandTimes"];
                this.columnRuleID = base.Columns["RuleID"];
                this.columnImplementedTimes = base.Columns["ImplementedTimes"];
                this.columnRuleOpinionID = base.Columns["RuleOpinionID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnSQLAuditorRuleID = new global::System.Data.DataColumn("SQLAuditorRuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQLAuditorRuleID);
                this.columnSelectedTimes = new global::System.Data.DataColumn("SelectedTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectedTimes);
                this.columnTotalTimes = new global::System.Data.DataColumn("TotalTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTimes);
                this.columnAgreeTimes = new global::System.Data.DataColumn("AgreeTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgreeTimes);
                this.columnDisagreeTimes = new global::System.Data.DataColumn("DisagreeTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisagreeTimes);
                this.columnTooHardToImplementTimes = new global::System.Data.DataColumn("TooHardToImplementTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTooHardToImplementTimes);
                this.columnIgnoreTimes = new global::System.Data.DataColumn("IgnoreTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIgnoreTimes);
                this.columnDontUnderstandTimes = new global::System.Data.DataColumn("DontUnderstandTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDontUnderstandTimes);
                this.columnRuleID = new global::System.Data.DataColumn("RuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleID);
                this.columnImplementedTimes = new global::System.Data.DataColumn("ImplementedTimes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImplementedTimes);
                this.columnRuleOpinionID = new global::System.Data.DataColumn("RuleOpinionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleOpinionID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRuleID}, true));
                this.columnSQLAuditorRuleID.DefaultValue = ((int)(0));
                this.columnAgreeTimes.DefaultValue = ((int)(0));
                this.columnDisagreeTimes.DefaultValue = ((int)(0));
                this.columnTooHardToImplementTimes.DefaultValue = ((int)(0));
                this.columnIgnoreTimes.DefaultValue = ((int)(0));
                this.columnDontUnderstandTimes.DefaultValue = ((int)(0));
                this.columnRuleID.AllowDBNull = false;
                this.columnRuleID.Unique = true;
                this.columnRuleID.DefaultValue = ((int)(0));
                this.columnImplementedTimes.DefaultValue = ((int)(0));
                this.columnRuleOpinionID.DefaultValue = ((int)(-1));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisRow NewviewRuleAnalysisRow() {
                return ((viewRuleAnalysisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new viewRuleAnalysisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(viewRuleAnalysisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.viewRuleAnalysisRowChanged != null)) {
                    this.viewRuleAnalysisRowChanged(this, new viewRuleAnalysisRowChangeEvent(((viewRuleAnalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.viewRuleAnalysisRowChanging != null)) {
                    this.viewRuleAnalysisRowChanging(this, new viewRuleAnalysisRowChangeEvent(((viewRuleAnalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.viewRuleAnalysisRowDeleted != null)) {
                    this.viewRuleAnalysisRowDeleted(this, new viewRuleAnalysisRowChangeEvent(((viewRuleAnalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.viewRuleAnalysisRowDeleting != null)) {
                    this.viewRuleAnalysisRowDeleting(this, new viewRuleAnalysisRowChangeEvent(((viewRuleAnalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveviewRuleAnalysisRow(viewRuleAnalysisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RuleAnalysis_V2_DataSet ds = new RuleAnalysis_V2_DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "viewRuleAnalysisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class viewRuleAnalysisRow : global::System.Data.DataRow {
            
            private viewRuleAnalysisDataTable tableviewRuleAnalysis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal viewRuleAnalysisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableviewRuleAnalysis = ((viewRuleAnalysisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SQLAuditorRuleID {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.SQLAuditorRuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“SQLAuditorRuleID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.SQLAuditorRuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SelectedTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.SelectedTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“SelectedTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.SelectedTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TotalTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.TotalTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“TotalTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.TotalTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int AgreeTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.AgreeTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“AgreeTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.AgreeTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DisagreeTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.DisagreeTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“DisagreeTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.DisagreeTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TooHardToImplementTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.TooHardToImplementTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“TooHardToImplementTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.TooHardToImplementTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int IgnoreTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.IgnoreTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“IgnoreTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.IgnoreTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DontUnderstandTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.DontUnderstandTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“DontUnderstandTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.DontUnderstandTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int RuleID {
                get {
                    return ((int)(this[this.tableviewRuleAnalysis.RuleIDColumn]));
                }
                set {
                    this[this.tableviewRuleAnalysis.RuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ImplementedTimes {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.ImplementedTimesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“ImplementedTimes”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.ImplementedTimesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int RuleOpinionID {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAnalysis.RuleOpinionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAnalysis”中列“RuleOpinionID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAnalysis.RuleOpinionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSQLAuditorRuleIDNull() {
                return this.IsNull(this.tableviewRuleAnalysis.SQLAuditorRuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSQLAuditorRuleIDNull() {
                this[this.tableviewRuleAnalysis.SQLAuditorRuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSelectedTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.SelectedTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSelectedTimesNull() {
                this[this.tableviewRuleAnalysis.SelectedTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.TotalTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalTimesNull() {
                this[this.tableviewRuleAnalysis.TotalTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAgreeTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.AgreeTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAgreeTimesNull() {
                this[this.tableviewRuleAnalysis.AgreeTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDisagreeTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.DisagreeTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDisagreeTimesNull() {
                this[this.tableviewRuleAnalysis.DisagreeTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTooHardToImplementTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.TooHardToImplementTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTooHardToImplementTimesNull() {
                this[this.tableviewRuleAnalysis.TooHardToImplementTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIgnoreTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.IgnoreTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIgnoreTimesNull() {
                this[this.tableviewRuleAnalysis.IgnoreTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDontUnderstandTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.DontUnderstandTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDontUnderstandTimesNull() {
                this[this.tableviewRuleAnalysis.DontUnderstandTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsImplementedTimesNull() {
                return this.IsNull(this.tableviewRuleAnalysis.ImplementedTimesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetImplementedTimesNull() {
                this[this.tableviewRuleAnalysis.ImplementedTimesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRuleOpinionIDNull() {
                return this.IsNull(this.tableviewRuleAnalysis.RuleOpinionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRuleOpinionIDNull() {
                this[this.tableviewRuleAnalysis.RuleOpinionIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class viewRuleAnalysisRowChangeEvent : global::System.EventArgs {
            
            private viewRuleAnalysisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisRowChangeEvent(viewRuleAnalysisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAnalysisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // 此类型定义由 System.Data.Design.TypedDataSetSchemaImporterExtension 架构导入程序扩展生成。
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RuleAgreementDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    public partial class RuleAgreementDataSet : global::System.Data.DataSet {
        
        private viewRuleAgreementStatDataTable tableviewRuleAgreementStat;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public RuleAgreementDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected RuleAgreementDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["viewRuleAgreementStat"] != null)) {
                    base.Tables.Add(new viewRuleAgreementStatDataTable(ds.Tables["viewRuleAgreementStat"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public viewRuleAgreementStatDataTable viewRuleAgreementStat {
            get {
                return this.tableviewRuleAgreementStat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            RuleAgreementDataSet cln = ((RuleAgreementDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["viewRuleAgreementStat"] != null)) {
                    base.Tables.Add(new viewRuleAgreementStatDataTable(ds.Tables["viewRuleAgreementStat"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableviewRuleAgreementStat = ((viewRuleAgreementStatDataTable)(base.Tables["viewRuleAgreementStat"]));
            if ((initTable == true)) {
                if ((this.tableviewRuleAgreementStat != null)) {
                    this.tableviewRuleAgreementStat.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "RuleAgreementDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RuleAgreementDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableviewRuleAgreementStat = new viewRuleAgreementStatDataTable();
            base.Tables.Add(this.tableviewRuleAgreementStat);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeviewRuleAgreementStat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RuleAgreementDataSet ds = new RuleAgreementDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void viewRuleAgreementStatRowChangeEventHandler(object sender, viewRuleAgreementStatRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class viewRuleAgreementStatDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRuleID;
            
            private global::System.Data.DataColumn columnSQLAuditorRuleID;
            
            private global::System.Data.DataColumn columnWebsiteRuleID;
            
            private global::System.Data.DataColumn columnTotalCount;
            
            private global::System.Data.DataColumn columnAgreeCount;
            
            private global::System.Data.DataColumn columnDisagreeCount;
            
            private global::System.Data.DataColumn columnHardToImplementCount;
            
            private global::System.Data.DataColumn columnIgnoredCount;
            
            private global::System.Data.DataColumn columnDontUnderstandCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAgreementStatDataTable() {
                this.TableName = "viewRuleAgreementStat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal viewRuleAgreementStatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected viewRuleAgreementStatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RuleIDColumn {
                get {
                    return this.columnRuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SQLAuditorRuleIDColumn {
                get {
                    return this.columnSQLAuditorRuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WebsiteRuleIDColumn {
                get {
                    return this.columnWebsiteRuleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalCountColumn {
                get {
                    return this.columnTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AgreeCountColumn {
                get {
                    return this.columnAgreeCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DisagreeCountColumn {
                get {
                    return this.columnDisagreeCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HardToImplementCountColumn {
                get {
                    return this.columnHardToImplementCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IgnoredCountColumn {
                get {
                    return this.columnIgnoredCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DontUnderstandCountColumn {
                get {
                    return this.columnDontUnderstandCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAgreementStatRow this[int index] {
                get {
                    return ((viewRuleAgreementStatRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event viewRuleAgreementStatRowChangeEventHandler viewRuleAgreementStatRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event viewRuleAgreementStatRowChangeEventHandler viewRuleAgreementStatRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event viewRuleAgreementStatRowChangeEventHandler viewRuleAgreementStatRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event viewRuleAgreementStatRowChangeEventHandler viewRuleAgreementStatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddviewRuleAgreementStatRow(viewRuleAgreementStatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAgreementStatRow AddviewRuleAgreementStatRow(int RuleID, int SQLAuditorRuleID, int WebsiteRuleID, int TotalCount, int AgreeCount, int DisagreeCount, int HardToImplementCount, int IgnoredCount, int DontUnderstandCount) {
                viewRuleAgreementStatRow rowviewRuleAgreementStatRow = ((viewRuleAgreementStatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RuleID,
                        SQLAuditorRuleID,
                        WebsiteRuleID,
                        TotalCount,
                        AgreeCount,
                        DisagreeCount,
                        HardToImplementCount,
                        IgnoredCount,
                        DontUnderstandCount};
                rowviewRuleAgreementStatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowviewRuleAgreementStatRow);
                return rowviewRuleAgreementStatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                viewRuleAgreementStatDataTable cln = ((viewRuleAgreementStatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new viewRuleAgreementStatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnRuleID = base.Columns["RuleID"];
                this.columnSQLAuditorRuleID = base.Columns["SQLAuditorRuleID"];
                this.columnWebsiteRuleID = base.Columns["WebsiteRuleID"];
                this.columnTotalCount = base.Columns["TotalCount"];
                this.columnAgreeCount = base.Columns["AgreeCount"];
                this.columnDisagreeCount = base.Columns["DisagreeCount"];
                this.columnHardToImplementCount = base.Columns["HardToImplementCount"];
                this.columnIgnoredCount = base.Columns["IgnoredCount"];
                this.columnDontUnderstandCount = base.Columns["DontUnderstandCount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnRuleID = new global::System.Data.DataColumn("RuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRuleID);
                this.columnSQLAuditorRuleID = new global::System.Data.DataColumn("SQLAuditorRuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQLAuditorRuleID);
                this.columnWebsiteRuleID = new global::System.Data.DataColumn("WebsiteRuleID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebsiteRuleID);
                this.columnTotalCount = new global::System.Data.DataColumn("TotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCount);
                this.columnAgreeCount = new global::System.Data.DataColumn("AgreeCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgreeCount);
                this.columnDisagreeCount = new global::System.Data.DataColumn("DisagreeCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisagreeCount);
                this.columnHardToImplementCount = new global::System.Data.DataColumn("HardToImplementCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHardToImplementCount);
                this.columnIgnoredCount = new global::System.Data.DataColumn("IgnoredCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIgnoredCount);
                this.columnDontUnderstandCount = new global::System.Data.DataColumn("DontUnderstandCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDontUnderstandCount);
                this.columnRuleID.DefaultValue = ((int)(0));
                this.columnSQLAuditorRuleID.DefaultValue = ((int)(0));
                this.columnWebsiteRuleID.DefaultValue = ((int)(0));
                this.columnTotalCount.DefaultValue = ((int)(0));
                this.columnAgreeCount.DefaultValue = ((int)(0));
                this.columnDisagreeCount.DefaultValue = ((int)(0));
                this.columnHardToImplementCount.DefaultValue = ((int)(0));
                this.columnIgnoredCount.DefaultValue = ((int)(0));
                this.columnDontUnderstandCount.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAgreementStatRow NewviewRuleAgreementStatRow() {
                return ((viewRuleAgreementStatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new viewRuleAgreementStatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(viewRuleAgreementStatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.viewRuleAgreementStatRowChanged != null)) {
                    this.viewRuleAgreementStatRowChanged(this, new viewRuleAgreementStatRowChangeEvent(((viewRuleAgreementStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.viewRuleAgreementStatRowChanging != null)) {
                    this.viewRuleAgreementStatRowChanging(this, new viewRuleAgreementStatRowChangeEvent(((viewRuleAgreementStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.viewRuleAgreementStatRowDeleted != null)) {
                    this.viewRuleAgreementStatRowDeleted(this, new viewRuleAgreementStatRowChangeEvent(((viewRuleAgreementStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.viewRuleAgreementStatRowDeleting != null)) {
                    this.viewRuleAgreementStatRowDeleting(this, new viewRuleAgreementStatRowChangeEvent(((viewRuleAgreementStatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveviewRuleAgreementStatRow(viewRuleAgreementStatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RuleAgreementDataSet ds = new RuleAgreementDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "viewRuleAgreementStatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class viewRuleAgreementStatRow : global::System.Data.DataRow {
            
            private viewRuleAgreementStatDataTable tableviewRuleAgreementStat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal viewRuleAgreementStatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableviewRuleAgreementStat = ((viewRuleAgreementStatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int RuleID {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAgreementStat.RuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAgreementStat”中列“RuleID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAgreementStat.RuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SQLAuditorRuleID {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAgreementStat.SQLAuditorRuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAgreementStat”中列“SQLAuditorRuleID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAgreementStat.SQLAuditorRuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int WebsiteRuleID {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAgreementStat.WebsiteRuleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAgreementStat”中列“WebsiteRuleID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAgreementStat.WebsiteRuleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TotalCount {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAgreementStat.TotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAgreementStat”中列“TotalCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAgreementStat.TotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int AgreeCount {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAgreementStat.AgreeCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAgreementStat”中列“AgreeCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAgreementStat.AgreeCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DisagreeCount {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAgreementStat.DisagreeCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAgreementStat”中列“DisagreeCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAgreementStat.DisagreeCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int HardToImplementCount {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAgreementStat.HardToImplementCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAgreementStat”中列“HardToImplementCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAgreementStat.HardToImplementCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int IgnoredCount {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAgreementStat.IgnoredCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAgreementStat”中列“IgnoredCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAgreementStat.IgnoredCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DontUnderstandCount {
                get {
                    try {
                        return ((int)(this[this.tableviewRuleAgreementStat.DontUnderstandCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“viewRuleAgreementStat”中列“DontUnderstandCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableviewRuleAgreementStat.DontUnderstandCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRuleIDNull() {
                return this.IsNull(this.tableviewRuleAgreementStat.RuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRuleIDNull() {
                this[this.tableviewRuleAgreementStat.RuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSQLAuditorRuleIDNull() {
                return this.IsNull(this.tableviewRuleAgreementStat.SQLAuditorRuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSQLAuditorRuleIDNull() {
                this[this.tableviewRuleAgreementStat.SQLAuditorRuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWebsiteRuleIDNull() {
                return this.IsNull(this.tableviewRuleAgreementStat.WebsiteRuleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWebsiteRuleIDNull() {
                this[this.tableviewRuleAgreementStat.WebsiteRuleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalCountNull() {
                return this.IsNull(this.tableviewRuleAgreementStat.TotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalCountNull() {
                this[this.tableviewRuleAgreementStat.TotalCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAgreeCountNull() {
                return this.IsNull(this.tableviewRuleAgreementStat.AgreeCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAgreeCountNull() {
                this[this.tableviewRuleAgreementStat.AgreeCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDisagreeCountNull() {
                return this.IsNull(this.tableviewRuleAgreementStat.DisagreeCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDisagreeCountNull() {
                this[this.tableviewRuleAgreementStat.DisagreeCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHardToImplementCountNull() {
                return this.IsNull(this.tableviewRuleAgreementStat.HardToImplementCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHardToImplementCountNull() {
                this[this.tableviewRuleAgreementStat.HardToImplementCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIgnoredCountNull() {
                return this.IsNull(this.tableviewRuleAgreementStat.IgnoredCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIgnoredCountNull() {
                this[this.tableviewRuleAgreementStat.IgnoredCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDontUnderstandCountNull() {
                return this.IsNull(this.tableviewRuleAgreementStat.DontUnderstandCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDontUnderstandCountNull() {
                this[this.tableviewRuleAgreementStat.DontUnderstandCountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class viewRuleAgreementStatRowChangeEvent : global::System.EventArgs {
            
            private viewRuleAgreementStatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAgreementStatRowChangeEvent(viewRuleAgreementStatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public viewRuleAgreementStatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertDatabaseAndStatsCompletedEventHandler(object sender, InsertDatabaseAndStatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDatabaseAndStatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDatabaseAndStatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRankCompletedEventHandler(object sender, GetRankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDbIDCompletedEventHandler(object sender, GetDbIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDbIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDbIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertDatabaseAndRuleUsageCompletedEventHandler(object sender, InsertDatabaseAndRuleUsageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDatabaseAndRuleUsageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDatabaseAndRuleUsageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertSingleRuleUsageRecordFromSQLAuditorCompletedEventHandler(object sender, InsertSingleRuleUsageRecordFromSQLAuditorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSingleRuleUsageRecordFromSQLAuditorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSingleRuleUsageRecordFromSQLAuditorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactCompletedEventHandler(object sender, InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSingleRuleUsageRecordFromSQLAuditorWithSSWContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertSingleRuleUsageRecordFromWebsiteCompletedEventHandler(object sender, InsertSingleRuleUsageRecordFromWebsiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSingleRuleUsageRecordFromWebsiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSingleRuleUsageRecordFromWebsiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRuleAnalysisDataSetCompletedEventHandler(object sender, GetRuleAnalysisDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRuleAnalysisDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRuleAnalysisDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RuleAnalysisDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RuleAnalysisDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRuleAnalysisDataSetWithContactIDCompletedEventHandler(object sender, GetRuleAnalysisDataSetWithContactIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRuleAnalysisDataSetWithContactIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRuleAnalysisDataSetWithContactIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RuleAnalysis_V2_DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RuleAnalysis_V2_DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRuleAgreementStatDataSetCompletedEventHandler(object sender, GetRuleAgreementStatDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRuleAgreementStatDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRuleAgreementStatDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RuleAgreementDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RuleAgreementDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateRuleUsageTableCompletedEventHandler(object sender, UpdateRuleUsageTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRuleUsageTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRuleUsageTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateRuleUsageCountTableCompletedEventHandler(object sender, UpdateRuleUsageCountTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRuleUsageCountTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRuleUsageCountTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWhoVotedTableForSQLAuditorCompletedEventHandler(object sender, GetWhoVotedTableForSQLAuditorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWhoVotedTableForSQLAuditorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWhoVotedTableForSQLAuditorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWhoVotedTableForWebsiteCompletedEventHandler(object sender, GetWhoVotedTableForWebsiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWhoVotedTableForWebsiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWhoVotedTableForWebsiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591