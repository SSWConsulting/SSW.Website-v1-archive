//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace SSWWebServiceRegistration {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RegistrationSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Registration : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsWebserviceAliveOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProdRegistrationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveClientExtedTrialAbilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientContactLoginSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientEmailExistSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientSubmitOrder2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientDiaryInsertWithClientTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencySelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientOrderConfirmationEmail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback zzDummyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Registration() {
            this.Url = "http://webservices.internal.ssw.com.au/SSWRegistrationWebService/Registration_v2." +
                "asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsWebserviceAliveCompletedEventHandler IsWebserviceAliveCompleted;
        
        /// <remarks/>
        public event SelectProductsCompletedEventHandler SelectProductsCompleted;
        
        /// <remarks/>
        public event ProdRegistrationInfoCompletedEventHandler ProdRegistrationInfoCompleted;
        
        /// <remarks/>
        public event RemoveClientExtedTrialAbilityCompletedEventHandler RemoveClientExtedTrialAbilityCompleted;
        
        /// <remarks/>
        public event ClientDetailCompletedEventHandler ClientDetailCompleted;
        
        /// <remarks/>
        public event ClientUpdateCompletedEventHandler ClientUpdateCompleted;
        
        /// <remarks/>
        public event ClientContactLoginSelectCompletedEventHandler ClientContactLoginSelectCompleted;
        
        /// <remarks/>
        public event ClientEmailExistSelectCompletedEventHandler ClientEmailExistSelectCompleted;
        
        /// <remarks/>
        public event ClientSubmitOrder2CompletedEventHandler ClientSubmitOrder2Completed;
        
        /// <remarks/>
        public event ClientDiaryInsertWithClientTimeCompletedEventHandler ClientDiaryInsertWithClientTimeCompleted;
        
        /// <remarks/>
        public event CurrencySelectCompletedEventHandler CurrencySelectCompleted;
        
        /// <remarks/>
        public event ClientOrderConfirmationEmail2CompletedEventHandler ClientOrderConfirmationEmail2Completed;
        
        /// <remarks/>
        public event zzDummyCompletedEventHandler zzDummyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsWebserviceAlive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsWebserviceAlive() {
            object[] results = this.Invoke("IsWebserviceAlive", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsWebserviceAliveAsync() {
            this.IsWebserviceAliveAsync(null);
        }
        
        /// <remarks/>
        public void IsWebserviceAliveAsync(object userState) {
            if ((this.IsWebserviceAliveOperationCompleted == null)) {
                this.IsWebserviceAliveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsWebserviceAliveOperationCompleted);
            }
            this.InvokeAsync("IsWebserviceAlive", new object[0], this.IsWebserviceAliveOperationCompleted, userState);
        }
        
        private void OnIsWebserviceAliveOperationCompleted(object arg) {
            if ((this.IsWebserviceAliveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsWebserviceAliveCompleted(this, new IsWebserviceAliveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Product[] SelectProducts(string prodNameInRegistrationDLL, string currencyID) {
            object[] results = this.Invoke("SelectProducts", new object[] {
                        prodNameInRegistrationDLL,
                        currencyID});
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void SelectProductsAsync(string prodNameInRegistrationDLL, string currencyID) {
            this.SelectProductsAsync(prodNameInRegistrationDLL, currencyID, null);
        }
        
        /// <remarks/>
        public void SelectProductsAsync(string prodNameInRegistrationDLL, string currencyID, object userState) {
            if ((this.SelectProductsOperationCompleted == null)) {
                this.SelectProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectProductsOperationCompleted);
            }
            this.InvokeAsync("SelectProducts", new object[] {
                        prodNameInRegistrationDLL,
                        currencyID}, this.SelectProductsOperationCompleted, userState);
        }
        
        private void OnSelectProductsOperationCompleted(object arg) {
            if ((this.SelectProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectProductsCompleted(this, new SelectProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProdRegistrationInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsRegistrationInfo ProdRegistrationInfo(string ProdName, int intClientContactID) {
            object[] results = this.Invoke("ProdRegistrationInfo", new object[] {
                        ProdName,
                        intClientContactID});
            return ((clsRegistrationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void ProdRegistrationInfoAsync(string ProdName, int intClientContactID) {
            this.ProdRegistrationInfoAsync(ProdName, intClientContactID, null);
        }
        
        /// <remarks/>
        public void ProdRegistrationInfoAsync(string ProdName, int intClientContactID, object userState) {
            if ((this.ProdRegistrationInfoOperationCompleted == null)) {
                this.ProdRegistrationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProdRegistrationInfoOperationCompleted);
            }
            this.InvokeAsync("ProdRegistrationInfo", new object[] {
                        ProdName,
                        intClientContactID}, this.ProdRegistrationInfoOperationCompleted, userState);
        }
        
        private void OnProdRegistrationInfoOperationCompleted(object arg) {
            if ((this.ProdRegistrationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProdRegistrationInfoCompleted(this, new ProdRegistrationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveClientExtedTrialAbility", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveClientExtedTrialAbility(int intClientContactID) {
            this.Invoke("RemoveClientExtedTrialAbility", new object[] {
                        intClientContactID});
        }
        
        /// <remarks/>
        public void RemoveClientExtedTrialAbilityAsync(int intClientContactID) {
            this.RemoveClientExtedTrialAbilityAsync(intClientContactID, null);
        }
        
        /// <remarks/>
        public void RemoveClientExtedTrialAbilityAsync(int intClientContactID, object userState) {
            if ((this.RemoveClientExtedTrialAbilityOperationCompleted == null)) {
                this.RemoveClientExtedTrialAbilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveClientExtedTrialAbilityOperationCompleted);
            }
            this.InvokeAsync("RemoveClientExtedTrialAbility", new object[] {
                        intClientContactID}, this.RemoveClientExtedTrialAbilityOperationCompleted, userState);
        }
        
        private void OnRemoveClientExtedTrialAbilityOperationCompleted(object arg) {
            if ((this.RemoveClientExtedTrialAbilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveClientExtedTrialAbilityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsContactFullDetails ClientDetail(int intContactID) {
            object[] results = this.Invoke("ClientDetail", new object[] {
                        intContactID});
            return ((clsContactFullDetails)(results[0]));
        }
        
        /// <remarks/>
        public void ClientDetailAsync(int intContactID) {
            this.ClientDetailAsync(intContactID, null);
        }
        
        /// <remarks/>
        public void ClientDetailAsync(int intContactID, object userState) {
            if ((this.ClientDetailOperationCompleted == null)) {
                this.ClientDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientDetailOperationCompleted);
            }
            this.InvokeAsync("ClientDetail", new object[] {
                        intContactID}, this.ClientDetailOperationCompleted, userState);
        }
        
        private void OnClientDetailOperationCompleted(object arg) {
            if ((this.ClientDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientDetailCompleted(this, new ClientDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClientUpdate(int intContactID, clsContactFullDetails objContactDetails, ref bool bolConcurrencyCheck) {
            object[] results = this.Invoke("ClientUpdate", new object[] {
                        intContactID,
                        objContactDetails,
                        bolConcurrencyCheck});
            bolConcurrencyCheck = ((bool)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClientUpdateAsync(int intContactID, clsContactFullDetails objContactDetails, bool bolConcurrencyCheck) {
            this.ClientUpdateAsync(intContactID, objContactDetails, bolConcurrencyCheck, null);
        }
        
        /// <remarks/>
        public void ClientUpdateAsync(int intContactID, clsContactFullDetails objContactDetails, bool bolConcurrencyCheck, object userState) {
            if ((this.ClientUpdateOperationCompleted == null)) {
                this.ClientUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientUpdateOperationCompleted);
            }
            this.InvokeAsync("ClientUpdate", new object[] {
                        intContactID,
                        objContactDetails,
                        bolConcurrencyCheck}, this.ClientUpdateOperationCompleted, userState);
        }
        
        private void OnClientUpdateOperationCompleted(object arg) {
            if ((this.ClientUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientUpdateCompleted(this, new ClientUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientContactLoginSelect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClientContactLoginSelect(string strEmail, string strPassword, string strScreenRes, string strBrowserType, string strNote) {
            object[] results = this.Invoke("ClientContactLoginSelect", new object[] {
                        strEmail,
                        strPassword,
                        strScreenRes,
                        strBrowserType,
                        strNote});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClientContactLoginSelectAsync(string strEmail, string strPassword, string strScreenRes, string strBrowserType, string strNote) {
            this.ClientContactLoginSelectAsync(strEmail, strPassword, strScreenRes, strBrowserType, strNote, null);
        }
        
        /// <remarks/>
        public void ClientContactLoginSelectAsync(string strEmail, string strPassword, string strScreenRes, string strBrowserType, string strNote, object userState) {
            if ((this.ClientContactLoginSelectOperationCompleted == null)) {
                this.ClientContactLoginSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientContactLoginSelectOperationCompleted);
            }
            this.InvokeAsync("ClientContactLoginSelect", new object[] {
                        strEmail,
                        strPassword,
                        strScreenRes,
                        strBrowserType,
                        strNote}, this.ClientContactLoginSelectOperationCompleted, userState);
        }
        
        private void OnClientContactLoginSelectOperationCompleted(object arg) {
            if ((this.ClientContactLoginSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientContactLoginSelectCompleted(this, new ClientContactLoginSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientEmailExistSelect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClientEmailExistSelect(string strEmail) {
            object[] results = this.Invoke("ClientEmailExistSelect", new object[] {
                        strEmail});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClientEmailExistSelectAsync(string strEmail) {
            this.ClientEmailExistSelectAsync(strEmail, null);
        }
        
        /// <remarks/>
        public void ClientEmailExistSelectAsync(string strEmail, object userState) {
            if ((this.ClientEmailExistSelectOperationCompleted == null)) {
                this.ClientEmailExistSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientEmailExistSelectOperationCompleted);
            }
            this.InvokeAsync("ClientEmailExistSelect", new object[] {
                        strEmail}, this.ClientEmailExistSelectOperationCompleted, userState);
        }
        
        private void OnClientEmailExistSelectOperationCompleted(object arg) {
            if ((this.ClientEmailExistSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientEmailExistSelectCompleted(this, new ClientEmailExistSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientSubmitOrder2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClientSubmitOrder2(int intClientContactID, object[] arrProdSubmitOrder, decimal dciGSTPercent, string strNote) {
            object[] results = this.Invoke("ClientSubmitOrder2", new object[] {
                        intClientContactID,
                        arrProdSubmitOrder,
                        dciGSTPercent,
                        strNote});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClientSubmitOrder2Async(int intClientContactID, object[] arrProdSubmitOrder, decimal dciGSTPercent, string strNote) {
            this.ClientSubmitOrder2Async(intClientContactID, arrProdSubmitOrder, dciGSTPercent, strNote, null);
        }
        
        /// <remarks/>
        public void ClientSubmitOrder2Async(int intClientContactID, object[] arrProdSubmitOrder, decimal dciGSTPercent, string strNote, object userState) {
            if ((this.ClientSubmitOrder2OperationCompleted == null)) {
                this.ClientSubmitOrder2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientSubmitOrder2OperationCompleted);
            }
            this.InvokeAsync("ClientSubmitOrder2", new object[] {
                        intClientContactID,
                        arrProdSubmitOrder,
                        dciGSTPercent,
                        strNote}, this.ClientSubmitOrder2OperationCompleted, userState);
        }
        
        private void OnClientSubmitOrder2OperationCompleted(object arg) {
            if ((this.ClientSubmitOrder2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientSubmitOrder2Completed(this, new ClientSubmitOrder2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientDiaryInsertWithClientTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClientDiaryInsertWithClientTime(int intContactID, string strCategoryID, string strDownloadVersionNo, string prodNameInRegistrationDLL, string strRegistrationUnlockKey, string strRegistrationComputerID, string strRegistrationComputerName, System.DateTime dteClientTime) {
            this.Invoke("ClientDiaryInsertWithClientTime", new object[] {
                        intContactID,
                        strCategoryID,
                        strDownloadVersionNo,
                        prodNameInRegistrationDLL,
                        strRegistrationUnlockKey,
                        strRegistrationComputerID,
                        strRegistrationComputerName,
                        dteClientTime});
        }
        
        /// <remarks/>
        public void ClientDiaryInsertWithClientTimeAsync(int intContactID, string strCategoryID, string strDownloadVersionNo, string prodNameInRegistrationDLL, string strRegistrationUnlockKey, string strRegistrationComputerID, string strRegistrationComputerName, System.DateTime dteClientTime) {
            this.ClientDiaryInsertWithClientTimeAsync(intContactID, strCategoryID, strDownloadVersionNo, prodNameInRegistrationDLL, strRegistrationUnlockKey, strRegistrationComputerID, strRegistrationComputerName, dteClientTime, null);
        }
        
        /// <remarks/>
        public void ClientDiaryInsertWithClientTimeAsync(int intContactID, string strCategoryID, string strDownloadVersionNo, string prodNameInRegistrationDLL, string strRegistrationUnlockKey, string strRegistrationComputerID, string strRegistrationComputerName, System.DateTime dteClientTime, object userState) {
            if ((this.ClientDiaryInsertWithClientTimeOperationCompleted == null)) {
                this.ClientDiaryInsertWithClientTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientDiaryInsertWithClientTimeOperationCompleted);
            }
            this.InvokeAsync("ClientDiaryInsertWithClientTime", new object[] {
                        intContactID,
                        strCategoryID,
                        strDownloadVersionNo,
                        prodNameInRegistrationDLL,
                        strRegistrationUnlockKey,
                        strRegistrationComputerID,
                        strRegistrationComputerName,
                        dteClientTime}, this.ClientDiaryInsertWithClientTimeOperationCompleted, userState);
        }
        
        private void OnClientDiaryInsertWithClientTimeOperationCompleted(object arg) {
            if ((this.ClientDiaryInsertWithClientTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientDiaryInsertWithClientTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CurrencySelect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CurrencySelect() {
            object[] results = this.Invoke("CurrencySelect", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencySelectAsync() {
            this.CurrencySelectAsync(null);
        }
        
        /// <remarks/>
        public void CurrencySelectAsync(object userState) {
            if ((this.CurrencySelectOperationCompleted == null)) {
                this.CurrencySelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencySelectOperationCompleted);
            }
            this.InvokeAsync("CurrencySelect", new object[0], this.CurrencySelectOperationCompleted, userState);
        }
        
        private void OnCurrencySelectOperationCompleted(object arg) {
            if ((this.CurrencySelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencySelectCompleted(this, new CurrencySelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientOrderConfirmationEmail2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ClientOrderConfirmationEmail2(object[] arrProdSubmitOrder, decimal dciTax, decimal dciTotal, int intInvoiceNumber, string strPaymentMethod, string strToName, string EmailAddress, string strCurrency) {
            object[] results = this.Invoke("ClientOrderConfirmationEmail2", new object[] {
                        arrProdSubmitOrder,
                        dciTax,
                        dciTotal,
                        intInvoiceNumber,
                        strPaymentMethod,
                        strToName,
                        EmailAddress,
                        strCurrency});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ClientOrderConfirmationEmail2Async(object[] arrProdSubmitOrder, decimal dciTax, decimal dciTotal, int intInvoiceNumber, string strPaymentMethod, string strToName, string EmailAddress, string strCurrency) {
            this.ClientOrderConfirmationEmail2Async(arrProdSubmitOrder, dciTax, dciTotal, intInvoiceNumber, strPaymentMethod, strToName, EmailAddress, strCurrency, null);
        }
        
        /// <remarks/>
        public void ClientOrderConfirmationEmail2Async(object[] arrProdSubmitOrder, decimal dciTax, decimal dciTotal, int intInvoiceNumber, string strPaymentMethod, string strToName, string EmailAddress, string strCurrency, object userState) {
            if ((this.ClientOrderConfirmationEmail2OperationCompleted == null)) {
                this.ClientOrderConfirmationEmail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientOrderConfirmationEmail2OperationCompleted);
            }
            this.InvokeAsync("ClientOrderConfirmationEmail2", new object[] {
                        arrProdSubmitOrder,
                        dciTax,
                        dciTotal,
                        intInvoiceNumber,
                        strPaymentMethod,
                        strToName,
                        EmailAddress,
                        strCurrency}, this.ClientOrderConfirmationEmail2OperationCompleted, userState);
        }
        
        private void OnClientOrderConfirmationEmail2OperationCompleted(object arg) {
            if ((this.ClientOrderConfirmationEmail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientOrderConfirmationEmail2Completed(this, new ClientOrderConfirmationEmail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/zzDummy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void zzDummy(ProdSubmitOrder a) {
            this.Invoke("zzDummy", new object[] {
                        a});
        }
        
        /// <remarks/>
        public void zzDummyAsync(ProdSubmitOrder a) {
            this.zzDummyAsync(a, null);
        }
        
        /// <remarks/>
        public void zzDummyAsync(ProdSubmitOrder a, object userState) {
            if ((this.zzDummyOperationCompleted == null)) {
                this.zzDummyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnzzDummyOperationCompleted);
            }
            this.InvokeAsync("zzDummy", new object[] {
                        a}, this.zzDummyOperationCompleted, userState);
        }
        
        private void OnzzDummyOperationCompleted(object arg) {
            if ((this.zzDummyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.zzDummyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Product {
        
        private string prodIDField;
        
        private string categoryIDField;
        
        private string prodNameField;
        
        private double productSellAmtField;
        
        private string productCurrencyField;
        
        private double productSellAmtAUDField;
        
        private double productSellAmtUSERField;
        
        private double productCurrencyRateField;
        
        private System.DateTime productCurrencyRateUpdatedField;
        
        /// <remarks/>
        public string ProdID {
            get {
                return this.prodIDField;
            }
            set {
                this.prodIDField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProdName {
            get {
                return this.prodNameField;
            }
            set {
                this.prodNameField = value;
            }
        }
        
        /// <remarks/>
        public double ProductSellAmt {
            get {
                return this.productSellAmtField;
            }
            set {
                this.productSellAmtField = value;
            }
        }
        
        /// <remarks/>
        public string ProductCurrency {
            get {
                return this.productCurrencyField;
            }
            set {
                this.productCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public double ProductSellAmtAUD {
            get {
                return this.productSellAmtAUDField;
            }
            set {
                this.productSellAmtAUDField = value;
            }
        }
        
        /// <remarks/>
        public double ProductSellAmtUSER {
            get {
                return this.productSellAmtUSERField;
            }
            set {
                this.productSellAmtUSERField = value;
            }
        }
        
        /// <remarks/>
        public double ProductCurrencyRate {
            get {
                return this.productCurrencyRateField;
            }
            set {
                this.productCurrencyRateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ProductCurrencyRateUpdated {
            get {
                return this.productCurrencyRateUpdatedField;
            }
            set {
                this.productCurrencyRateUpdatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProdSubmitOrder {
        
        private string prodIDField;
        
        private int quantityField;
        
        private double discountPercentField;
        
        /// <remarks/>
        public string ProdID {
            get {
                return this.prodIDField;
            }
            set {
                this.prodIDField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public double DiscountPercent {
            get {
                return this.discountPercentField;
            }
            set {
                this.discountPercentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsContactFullDetails {
        
        private string emailField;
        
        private string firstNameField;
        
        private string surnameField;
        
        private string coNameField;
        
        private string positionField;
        
        private string industryField;
        
        private string addressField;
        
        private string suburbField;
        
        private string stateField;
        
        private string postcodeField;
        
        private string countryField;
        
        private string pAddressField;
        
        private string pSuburbField;
        
        private string pStateField;
        
        private string pPostcodeField;
        
        private string pCountryField;
        
        private string phoneWField;
        
        private string faxWField;
        
        private string phoneHField;
        
        private string faxHField;
        
        private string phoneOtherField;
        
        private string wWWField;
        
        private string referredByField;
        
        private string searchEngineField;
        
        private string noteField;
        
        private string offMailingEmailField;
        
        private string offMailingPostalField;
        
        private string offMailingFaxField;
        
        private string currencyIDField;
        
        private int concurrencyField;
        
        private string passwordField;
        
        private string dateUpdatedField;
        
        private string employeeCountField;
        
        private string timeZoneField;
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string CoName {
            get {
                return this.coNameField;
            }
            set {
                this.coNameField = value;
            }
        }
        
        /// <remarks/>
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string Industry {
            get {
                return this.industryField;
            }
            set {
                this.industryField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Suburb {
            get {
                return this.suburbField;
            }
            set {
                this.suburbField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Postcode {
            get {
                return this.postcodeField;
            }
            set {
                this.postcodeField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string PAddress {
            get {
                return this.pAddressField;
            }
            set {
                this.pAddressField = value;
            }
        }
        
        /// <remarks/>
        public string PSuburb {
            get {
                return this.pSuburbField;
            }
            set {
                this.pSuburbField = value;
            }
        }
        
        /// <remarks/>
        public string PState {
            get {
                return this.pStateField;
            }
            set {
                this.pStateField = value;
            }
        }
        
        /// <remarks/>
        public string PPostcode {
            get {
                return this.pPostcodeField;
            }
            set {
                this.pPostcodeField = value;
            }
        }
        
        /// <remarks/>
        public string PCountry {
            get {
                return this.pCountryField;
            }
            set {
                this.pCountryField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneW {
            get {
                return this.phoneWField;
            }
            set {
                this.phoneWField = value;
            }
        }
        
        /// <remarks/>
        public string FaxW {
            get {
                return this.faxWField;
            }
            set {
                this.faxWField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneH {
            get {
                return this.phoneHField;
            }
            set {
                this.phoneHField = value;
            }
        }
        
        /// <remarks/>
        public string FaxH {
            get {
                return this.faxHField;
            }
            set {
                this.faxHField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneOther {
            get {
                return this.phoneOtherField;
            }
            set {
                this.phoneOtherField = value;
            }
        }
        
        /// <remarks/>
        public string WWW {
            get {
                return this.wWWField;
            }
            set {
                this.wWWField = value;
            }
        }
        
        /// <remarks/>
        public string ReferredBy {
            get {
                return this.referredByField;
            }
            set {
                this.referredByField = value;
            }
        }
        
        /// <remarks/>
        public string SearchEngine {
            get {
                return this.searchEngineField;
            }
            set {
                this.searchEngineField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string OffMailingEmail {
            get {
                return this.offMailingEmailField;
            }
            set {
                this.offMailingEmailField = value;
            }
        }
        
        /// <remarks/>
        public string OffMailingPostal {
            get {
                return this.offMailingPostalField;
            }
            set {
                this.offMailingPostalField = value;
            }
        }
        
        /// <remarks/>
        public string OffMailingFax {
            get {
                return this.offMailingFaxField;
            }
            set {
                this.offMailingFaxField = value;
            }
        }
        
        /// <remarks/>
        public string CurrencyID {
            get {
                return this.currencyIDField;
            }
            set {
                this.currencyIDField = value;
            }
        }
        
        /// <remarks/>
        public int Concurrency {
            get {
                return this.concurrencyField;
            }
            set {
                this.concurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string EmployeeCount {
            get {
                return this.employeeCountField;
            }
            set {
                this.employeeCountField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsRegistrationInfo {
        
        private System.DateTime upgradeExpiryDateField;
        
        private decimal newestVersionRegisteredField;
        
        private bool hasRegisteredToManyTimesThisMonthField;
        
        private bool canExtendTrialField;
        
        /// <remarks/>
        public System.DateTime UpgradeExpiryDate {
            get {
                return this.upgradeExpiryDateField;
            }
            set {
                this.upgradeExpiryDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal NewestVersionRegistered {
            get {
                return this.newestVersionRegisteredField;
            }
            set {
                this.newestVersionRegisteredField = value;
            }
        }
        
        /// <remarks/>
        public bool HasRegisteredToManyTimesThisMonth {
            get {
                return this.hasRegisteredToManyTimesThisMonthField;
            }
            set {
                this.hasRegisteredToManyTimesThisMonthField = value;
            }
        }
        
        /// <remarks/>
        public bool CanExtendTrial {
            get {
                return this.canExtendTrialField;
            }
            set {
                this.canExtendTrialField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsWebserviceAliveCompletedEventHandler(object sender, IsWebserviceAliveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsWebserviceAliveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsWebserviceAliveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SelectProductsCompletedEventHandler(object sender, SelectProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProdRegistrationInfoCompletedEventHandler(object sender, ProdRegistrationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProdRegistrationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProdRegistrationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsRegistrationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsRegistrationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RemoveClientExtedTrialAbilityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientDetailCompletedEventHandler(object sender, ClientDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsContactFullDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsContactFullDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientUpdateCompletedEventHandler(object sender, ClientUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bolConcurrencyCheck {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientContactLoginSelectCompletedEventHandler(object sender, ClientContactLoginSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientContactLoginSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientContactLoginSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientEmailExistSelectCompletedEventHandler(object sender, ClientEmailExistSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientEmailExistSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientEmailExistSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientSubmitOrder2CompletedEventHandler(object sender, ClientSubmitOrder2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientSubmitOrder2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientSubmitOrder2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientDiaryInsertWithClientTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CurrencySelectCompletedEventHandler(object sender, CurrencySelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencySelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencySelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientOrderConfirmationEmail2CompletedEventHandler(object sender, ClientOrderConfirmationEmail2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientOrderConfirmationEmail2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientOrderConfirmationEmail2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void zzDummyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591