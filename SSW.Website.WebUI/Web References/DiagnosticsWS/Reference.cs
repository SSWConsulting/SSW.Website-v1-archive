//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace DiagnosticsWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DiagnosticsWebServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RelatedEnd))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StructuralObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityKeyMember[]))]
    public partial class DiagnosticsWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetHistoryReportListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSWDiagnosticsNewReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSWDiagnosticsGetReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSWDiagnosticsVoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSWDiagnosticsGetVersionVoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSWDiagnosticsGetVoteListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSWDiagnosticsGetVoteAgreePercentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSWDiagnosticsUploadUsageReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSWDiagnosticsGetUsageReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSWDiagnosticsGetHealthUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSWDiagnosticsGetProductNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUnrecognizedVersionLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewProductVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateNewVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductGroupByCateogryIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductByGroupIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductVersionHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileDeifinitionsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DiagnosticsWebService() {
            this.Url = "http://webservices.internal.ssw.com.au/sswDignostics/Diagnostics.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetHistoryReportListCompletedEventHandler GetHistoryReportListCompleted;
        
        /// <remarks/>
        public event SSWDiagnosticsNewReportCompletedEventHandler SSWDiagnosticsNewReportCompleted;
        
        /// <remarks/>
        public event SSWDiagnosticsGetReportCompletedEventHandler SSWDiagnosticsGetReportCompleted;
        
        /// <remarks/>
        public event SSWDiagnosticsVoteCompletedEventHandler SSWDiagnosticsVoteCompleted;
        
        /// <remarks/>
        public event SSWDiagnosticsGetVersionVoteCompletedEventHandler SSWDiagnosticsGetVersionVoteCompleted;
        
        /// <remarks/>
        public event SSWDiagnosticsGetVoteListCompletedEventHandler SSWDiagnosticsGetVoteListCompleted;
        
        /// <remarks/>
        public event SSWDiagnosticsGetVoteAgreePercentCompletedEventHandler SSWDiagnosticsGetVoteAgreePercentCompleted;
        
        /// <remarks/>
        public event SSWDiagnosticsUploadUsageReportCompletedEventHandler SSWDiagnosticsUploadUsageReportCompleted;
        
        /// <remarks/>
        public event SSWDiagnosticsGetUsageReportCompletedEventHandler SSWDiagnosticsGetUsageReportCompleted;
        
        /// <remarks/>
        public event SSWDiagnosticsGetHealthUsersCompletedEventHandler SSWDiagnosticsGetHealthUsersCompleted;
        
        /// <remarks/>
        public event SSWDiagnosticsGetProductNameCompletedEventHandler SSWDiagnosticsGetProductNameCompleted;
        
        /// <remarks/>
        public event AddUnrecognizedVersionLogCompletedEventHandler AddUnrecognizedVersionLogCompleted;
        
        /// <remarks/>
        public event AddNewProductVersionCompletedEventHandler AddNewProductVersionCompleted;
        
        /// <remarks/>
        public event GenerateNewVersionCompletedEventHandler GenerateNewVersionCompleted;
        
        /// <remarks/>
        public event GetProductCategoryCompletedEventHandler GetProductCategoryCompleted;
        
        /// <remarks/>
        public event GetProductGroupByCateogryIDCompletedEventHandler GetProductGroupByCateogryIDCompleted;
        
        /// <remarks/>
        public event GetProductByGroupIDCompletedEventHandler GetProductByGroupIDCompleted;
        
        /// <remarks/>
        public event GetProductVersionHistoryCompletedEventHandler GetProductVersionHistoryCompleted;
        
        /// <remarks/>
        public event GetFileDeifinitionsCompletedEventHandler GetFileDeifinitionsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHistoryReportList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SSWHistoryReportListDataSet GetHistoryReportList(string contactID) {
            object[] results = this.Invoke("GetHistoryReportList", new object[] {
                        contactID});
            return ((SSWHistoryReportListDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryReportListAsync(string contactID) {
            this.GetHistoryReportListAsync(contactID, null);
        }
        
        /// <remarks/>
        public void GetHistoryReportListAsync(string contactID, object userState) {
            if ((this.GetHistoryReportListOperationCompleted == null)) {
                this.GetHistoryReportListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryReportListOperationCompleted);
            }
            this.InvokeAsync("GetHistoryReportList", new object[] {
                        contactID}, this.GetHistoryReportListOperationCompleted, userState);
        }
        
        private void OnGetHistoryReportListOperationCompleted(object arg) {
            if ((this.GetHistoryReportListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryReportListCompleted(this, new GetHistoryReportListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SSWDiagnosticsNewReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SSWDiagnosticsNewReport(string contactID, string empUpdate, string good, string bad, string unrecognised, string xml) {
            object[] results = this.Invoke("SSWDiagnosticsNewReport", new object[] {
                        contactID,
                        empUpdate,
                        good,
                        bad,
                        unrecognised,
                        xml});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SSWDiagnosticsNewReportAsync(string contactID, string empUpdate, string good, string bad, string unrecognised, string xml) {
            this.SSWDiagnosticsNewReportAsync(contactID, empUpdate, good, bad, unrecognised, xml, null);
        }
        
        /// <remarks/>
        public void SSWDiagnosticsNewReportAsync(string contactID, string empUpdate, string good, string bad, string unrecognised, string xml, object userState) {
            if ((this.SSWDiagnosticsNewReportOperationCompleted == null)) {
                this.SSWDiagnosticsNewReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSWDiagnosticsNewReportOperationCompleted);
            }
            this.InvokeAsync("SSWDiagnosticsNewReport", new object[] {
                        contactID,
                        empUpdate,
                        good,
                        bad,
                        unrecognised,
                        xml}, this.SSWDiagnosticsNewReportOperationCompleted, userState);
        }
        
        private void OnSSWDiagnosticsNewReportOperationCompleted(object arg) {
            if ((this.SSWDiagnosticsNewReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSWDiagnosticsNewReportCompleted(this, new SSWDiagnosticsNewReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SSWDiagnosticsGetReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SSWDiagnosticsGetReport(string contactID, string empUpdate) {
            object[] results = this.Invoke("SSWDiagnosticsGetReport", new object[] {
                        contactID,
                        empUpdate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetReportAsync(string contactID, string empUpdate) {
            this.SSWDiagnosticsGetReportAsync(contactID, empUpdate, null);
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetReportAsync(string contactID, string empUpdate, object userState) {
            if ((this.SSWDiagnosticsGetReportOperationCompleted == null)) {
                this.SSWDiagnosticsGetReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSWDiagnosticsGetReportOperationCompleted);
            }
            this.InvokeAsync("SSWDiagnosticsGetReport", new object[] {
                        contactID,
                        empUpdate}, this.SSWDiagnosticsGetReportOperationCompleted, userState);
        }
        
        private void OnSSWDiagnosticsGetReportOperationCompleted(object arg) {
            if ((this.SSWDiagnosticsGetReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSWDiagnosticsGetReportCompleted(this, new SSWDiagnosticsGetReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SSWDiagnosticsVote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SSWDiagnosticsVote(string version, int productID, int opinionID, string contactID, string comment, string empUpdate, string voteIP) {
            object[] results = this.Invoke("SSWDiagnosticsVote", new object[] {
                        version,
                        productID,
                        opinionID,
                        contactID,
                        comment,
                        empUpdate,
                        voteIP});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SSWDiagnosticsVoteAsync(string version, int productID, int opinionID, string contactID, string comment, string empUpdate, string voteIP) {
            this.SSWDiagnosticsVoteAsync(version, productID, opinionID, contactID, comment, empUpdate, voteIP, null);
        }
        
        /// <remarks/>
        public void SSWDiagnosticsVoteAsync(string version, int productID, int opinionID, string contactID, string comment, string empUpdate, string voteIP, object userState) {
            if ((this.SSWDiagnosticsVoteOperationCompleted == null)) {
                this.SSWDiagnosticsVoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSWDiagnosticsVoteOperationCompleted);
            }
            this.InvokeAsync("SSWDiagnosticsVote", new object[] {
                        version,
                        productID,
                        opinionID,
                        contactID,
                        comment,
                        empUpdate,
                        voteIP}, this.SSWDiagnosticsVoteOperationCompleted, userState);
        }
        
        private void OnSSWDiagnosticsVoteOperationCompleted(object arg) {
            if ((this.SSWDiagnosticsVoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSWDiagnosticsVoteCompleted(this, new SSWDiagnosticsVoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SSWDiagnosticsGetVersionVote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SSWDiagnosticsGetVersionVote(string version, int productID) {
            object[] results = this.Invoke("SSWDiagnosticsGetVersionVote", new object[] {
                        version,
                        productID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetVersionVoteAsync(string version, int productID) {
            this.SSWDiagnosticsGetVersionVoteAsync(version, productID, null);
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetVersionVoteAsync(string version, int productID, object userState) {
            if ((this.SSWDiagnosticsGetVersionVoteOperationCompleted == null)) {
                this.SSWDiagnosticsGetVersionVoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSWDiagnosticsGetVersionVoteOperationCompleted);
            }
            this.InvokeAsync("SSWDiagnosticsGetVersionVote", new object[] {
                        version,
                        productID}, this.SSWDiagnosticsGetVersionVoteOperationCompleted, userState);
        }
        
        private void OnSSWDiagnosticsGetVersionVoteOperationCompleted(object arg) {
            if ((this.SSWDiagnosticsGetVersionVoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSWDiagnosticsGetVersionVoteCompleted(this, new SSWDiagnosticsGetVersionVoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SSWDiagnosticsGetVoteList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SSWDiagnosticsGetVoteList(int productID, string version) {
            object[] results = this.Invoke("SSWDiagnosticsGetVoteList", new object[] {
                        productID,
                        version});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetVoteListAsync(int productID, string version) {
            this.SSWDiagnosticsGetVoteListAsync(productID, version, null);
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetVoteListAsync(int productID, string version, object userState) {
            if ((this.SSWDiagnosticsGetVoteListOperationCompleted == null)) {
                this.SSWDiagnosticsGetVoteListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSWDiagnosticsGetVoteListOperationCompleted);
            }
            this.InvokeAsync("SSWDiagnosticsGetVoteList", new object[] {
                        productID,
                        version}, this.SSWDiagnosticsGetVoteListOperationCompleted, userState);
        }
        
        private void OnSSWDiagnosticsGetVoteListOperationCompleted(object arg) {
            if ((this.SSWDiagnosticsGetVoteListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSWDiagnosticsGetVoteListCompleted(this, new SSWDiagnosticsGetVoteListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SSWDiagnosticsGetVoteAgreePercent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SSWDiagnosticsGetVoteAgreePercent() {
            object[] results = this.Invoke("SSWDiagnosticsGetVoteAgreePercent", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetVoteAgreePercentAsync() {
            this.SSWDiagnosticsGetVoteAgreePercentAsync(null);
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetVoteAgreePercentAsync(object userState) {
            if ((this.SSWDiagnosticsGetVoteAgreePercentOperationCompleted == null)) {
                this.SSWDiagnosticsGetVoteAgreePercentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSWDiagnosticsGetVoteAgreePercentOperationCompleted);
            }
            this.InvokeAsync("SSWDiagnosticsGetVoteAgreePercent", new object[0], this.SSWDiagnosticsGetVoteAgreePercentOperationCompleted, userState);
        }
        
        private void OnSSWDiagnosticsGetVoteAgreePercentOperationCompleted(object arg) {
            if ((this.SSWDiagnosticsGetVoteAgreePercentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSWDiagnosticsGetVoteAgreePercentCompleted(this, new SSWDiagnosticsGetVoteAgreePercentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SSWDiagnosticsUploadUsageReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SSWDiagnosticsUploadUsageReport(string hardwareInfo, string reportDetails, bool enable) {
            object[] results = this.Invoke("SSWDiagnosticsUploadUsageReport", new object[] {
                        hardwareInfo,
                        reportDetails,
                        enable});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SSWDiagnosticsUploadUsageReportAsync(string hardwareInfo, string reportDetails, bool enable) {
            this.SSWDiagnosticsUploadUsageReportAsync(hardwareInfo, reportDetails, enable, null);
        }
        
        /// <remarks/>
        public void SSWDiagnosticsUploadUsageReportAsync(string hardwareInfo, string reportDetails, bool enable, object userState) {
            if ((this.SSWDiagnosticsUploadUsageReportOperationCompleted == null)) {
                this.SSWDiagnosticsUploadUsageReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSWDiagnosticsUploadUsageReportOperationCompleted);
            }
            this.InvokeAsync("SSWDiagnosticsUploadUsageReport", new object[] {
                        hardwareInfo,
                        reportDetails,
                        enable}, this.SSWDiagnosticsUploadUsageReportOperationCompleted, userState);
        }
        
        private void OnSSWDiagnosticsUploadUsageReportOperationCompleted(object arg) {
            if ((this.SSWDiagnosticsUploadUsageReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSWDiagnosticsUploadUsageReportCompleted(this, new SSWDiagnosticsUploadUsageReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SSWDiagnosticsGetUsageReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SSWDiagnosticsGetUsageReport() {
            object[] results = this.Invoke("SSWDiagnosticsGetUsageReport", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetUsageReportAsync() {
            this.SSWDiagnosticsGetUsageReportAsync(null);
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetUsageReportAsync(object userState) {
            if ((this.SSWDiagnosticsGetUsageReportOperationCompleted == null)) {
                this.SSWDiagnosticsGetUsageReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSWDiagnosticsGetUsageReportOperationCompleted);
            }
            this.InvokeAsync("SSWDiagnosticsGetUsageReport", new object[0], this.SSWDiagnosticsGetUsageReportOperationCompleted, userState);
        }
        
        private void OnSSWDiagnosticsGetUsageReportOperationCompleted(object arg) {
            if ((this.SSWDiagnosticsGetUsageReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSWDiagnosticsGetUsageReportCompleted(this, new SSWDiagnosticsGetUsageReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SSWDiagnosticsGetHealthUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SSWDiagnosticsGetHealthUsers() {
            object[] results = this.Invoke("SSWDiagnosticsGetHealthUsers", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetHealthUsersAsync() {
            this.SSWDiagnosticsGetHealthUsersAsync(null);
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetHealthUsersAsync(object userState) {
            if ((this.SSWDiagnosticsGetHealthUsersOperationCompleted == null)) {
                this.SSWDiagnosticsGetHealthUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSWDiagnosticsGetHealthUsersOperationCompleted);
            }
            this.InvokeAsync("SSWDiagnosticsGetHealthUsers", new object[0], this.SSWDiagnosticsGetHealthUsersOperationCompleted, userState);
        }
        
        private void OnSSWDiagnosticsGetHealthUsersOperationCompleted(object arg) {
            if ((this.SSWDiagnosticsGetHealthUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSWDiagnosticsGetHealthUsersCompleted(this, new SSWDiagnosticsGetHealthUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SSWDiagnosticsGetProductName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SSWDiagnosticsGetProductName(int productID) {
            object[] results = this.Invoke("SSWDiagnosticsGetProductName", new object[] {
                        productID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetProductNameAsync(int productID) {
            this.SSWDiagnosticsGetProductNameAsync(productID, null);
        }
        
        /// <remarks/>
        public void SSWDiagnosticsGetProductNameAsync(int productID, object userState) {
            if ((this.SSWDiagnosticsGetProductNameOperationCompleted == null)) {
                this.SSWDiagnosticsGetProductNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSWDiagnosticsGetProductNameOperationCompleted);
            }
            this.InvokeAsync("SSWDiagnosticsGetProductName", new object[] {
                        productID}, this.SSWDiagnosticsGetProductNameOperationCompleted, userState);
        }
        
        private void OnSSWDiagnosticsGetProductNameOperationCompleted(object arg) {
            if ((this.SSWDiagnosticsGetProductNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSWDiagnosticsGetProductNameCompleted(this, new SSWDiagnosticsGetProductNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUnrecognizedVersionLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddUnrecognizedVersionLog(string filePath, string comments, string fileVersion, string productVersion, string productName, string fileDefinitionName, string internalName, string versionXmlAdd, string sendUserName, string sendComputerName, System.DateTime sendDate) {
            object[] results = this.Invoke("AddUnrecognizedVersionLog", new object[] {
                        filePath,
                        comments,
                        fileVersion,
                        productVersion,
                        productName,
                        fileDefinitionName,
                        internalName,
                        versionXmlAdd,
                        sendUserName,
                        sendComputerName,
                        sendDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddUnrecognizedVersionLogAsync(string filePath, string comments, string fileVersion, string productVersion, string productName, string fileDefinitionName, string internalName, string versionXmlAdd, string sendUserName, string sendComputerName, System.DateTime sendDate) {
            this.AddUnrecognizedVersionLogAsync(filePath, comments, fileVersion, productVersion, productName, fileDefinitionName, internalName, versionXmlAdd, sendUserName, sendComputerName, sendDate, null);
        }
        
        /// <remarks/>
        public void AddUnrecognizedVersionLogAsync(string filePath, string comments, string fileVersion, string productVersion, string productName, string fileDefinitionName, string internalName, string versionXmlAdd, string sendUserName, string sendComputerName, System.DateTime sendDate, object userState) {
            if ((this.AddUnrecognizedVersionLogOperationCompleted == null)) {
                this.AddUnrecognizedVersionLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUnrecognizedVersionLogOperationCompleted);
            }
            this.InvokeAsync("AddUnrecognizedVersionLog", new object[] {
                        filePath,
                        comments,
                        fileVersion,
                        productVersion,
                        productName,
                        fileDefinitionName,
                        internalName,
                        versionXmlAdd,
                        sendUserName,
                        sendComputerName,
                        sendDate}, this.AddUnrecognizedVersionLogOperationCompleted, userState);
        }
        
        private void OnAddUnrecognizedVersionLogOperationCompleted(object arg) {
            if ((this.AddUnrecognizedVersionLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUnrecognizedVersionLogCompleted(this, new AddUnrecognizedVersionLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewProductVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddNewProductVersion(ProductVersion pVersion) {
            this.Invoke("AddNewProductVersion", new object[] {
                        pVersion});
        }
        
        /// <remarks/>
        public void AddNewProductVersionAsync(ProductVersion pVersion) {
            this.AddNewProductVersionAsync(pVersion, null);
        }
        
        /// <remarks/>
        public void AddNewProductVersionAsync(ProductVersion pVersion, object userState) {
            if ((this.AddNewProductVersionOperationCompleted == null)) {
                this.AddNewProductVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewProductVersionOperationCompleted);
            }
            this.InvokeAsync("AddNewProductVersion", new object[] {
                        pVersion}, this.AddNewProductVersionOperationCompleted, userState);
        }
        
        private void OnAddNewProductVersionOperationCompleted(object arg) {
            if ((this.AddNewProductVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewProductVersionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateNewVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductVersion GenerateNewVersion(int productID) {
            object[] results = this.Invoke("GenerateNewVersion", new object[] {
                        productID});
            return ((ProductVersion)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateNewVersionAsync(int productID) {
            this.GenerateNewVersionAsync(productID, null);
        }
        
        /// <remarks/>
        public void GenerateNewVersionAsync(int productID, object userState) {
            if ((this.GenerateNewVersionOperationCompleted == null)) {
                this.GenerateNewVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateNewVersionOperationCompleted);
            }
            this.InvokeAsync("GenerateNewVersion", new object[] {
                        productID}, this.GenerateNewVersionOperationCompleted, userState);
        }
        
        private void OnGenerateNewVersionOperationCompleted(object arg) {
            if ((this.GenerateNewVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateNewVersionCompleted(this, new GenerateNewVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Category[] GetProductCategory() {
            object[] results = this.Invoke("GetProductCategory", new object[0]);
            return ((Category[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductCategoryAsync() {
            this.GetProductCategoryAsync(null);
        }
        
        /// <remarks/>
        public void GetProductCategoryAsync(object userState) {
            if ((this.GetProductCategoryOperationCompleted == null)) {
                this.GetProductCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductCategoryOperationCompleted);
            }
            this.InvokeAsync("GetProductCategory", new object[0], this.GetProductCategoryOperationCompleted, userState);
        }
        
        private void OnGetProductCategoryOperationCompleted(object arg) {
            if ((this.GetProductCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductCategoryCompleted(this, new GetProductCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductGroupByCateogryID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductGroup[] GetProductGroupByCateogryID(int categoryID) {
            object[] results = this.Invoke("GetProductGroupByCateogryID", new object[] {
                        categoryID});
            return ((ProductGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductGroupByCateogryIDAsync(int categoryID) {
            this.GetProductGroupByCateogryIDAsync(categoryID, null);
        }
        
        /// <remarks/>
        public void GetProductGroupByCateogryIDAsync(int categoryID, object userState) {
            if ((this.GetProductGroupByCateogryIDOperationCompleted == null)) {
                this.GetProductGroupByCateogryIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductGroupByCateogryIDOperationCompleted);
            }
            this.InvokeAsync("GetProductGroupByCateogryID", new object[] {
                        categoryID}, this.GetProductGroupByCateogryIDOperationCompleted, userState);
        }
        
        private void OnGetProductGroupByCateogryIDOperationCompleted(object arg) {
            if ((this.GetProductGroupByCateogryIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductGroupByCateogryIDCompleted(this, new GetProductGroupByCateogryIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductByGroupID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] GetProductByGroupID(int groupID) {
            object[] results = this.Invoke("GetProductByGroupID", new object[] {
                        groupID});
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductByGroupIDAsync(int groupID) {
            this.GetProductByGroupIDAsync(groupID, null);
        }
        
        /// <remarks/>
        public void GetProductByGroupIDAsync(int groupID, object userState) {
            if ((this.GetProductByGroupIDOperationCompleted == null)) {
                this.GetProductByGroupIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductByGroupIDOperationCompleted);
            }
            this.InvokeAsync("GetProductByGroupID", new object[] {
                        groupID}, this.GetProductByGroupIDOperationCompleted, userState);
        }
        
        private void OnGetProductByGroupIDOperationCompleted(object arg) {
            if ((this.GetProductByGroupIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductByGroupIDCompleted(this, new GetProductByGroupIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductVersionHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductVersion[] GetProductVersionHistory(int productID) {
            object[] results = this.Invoke("GetProductVersionHistory", new object[] {
                        productID});
            return ((ProductVersion[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductVersionHistoryAsync(int productID) {
            this.GetProductVersionHistoryAsync(productID, null);
        }
        
        /// <remarks/>
        public void GetProductVersionHistoryAsync(int productID, object userState) {
            if ((this.GetProductVersionHistoryOperationCompleted == null)) {
                this.GetProductVersionHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductVersionHistoryOperationCompleted);
            }
            this.InvokeAsync("GetProductVersionHistory", new object[] {
                        productID}, this.GetProductVersionHistoryOperationCompleted, userState);
        }
        
        private void OnGetProductVersionHistoryOperationCompleted(object arg) {
            if ((this.GetProductVersionHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductVersionHistoryCompleted(this, new GetProductVersionHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileDeifinitions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileDefinition[] GetFileDeifinitions() {
            object[] results = this.Invoke("GetFileDeifinitions", new object[0]);
            return ((FileDefinition[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileDeifinitionsAsync() {
            this.GetFileDeifinitionsAsync(null);
        }
        
        /// <remarks/>
        public void GetFileDeifinitionsAsync(object userState) {
            if ((this.GetFileDeifinitionsOperationCompleted == null)) {
                this.GetFileDeifinitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileDeifinitionsOperationCompleted);
            }
            this.InvokeAsync("GetFileDeifinitions", new object[0], this.GetFileDeifinitionsOperationCompleted, userState);
        }
        
        private void OnGetFileDeifinitionsOperationCompleted(object arg) {
            if ((this.GetFileDeifinitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileDeifinitionsCompleted(this, new GetFileDeifinitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // 此类型定义由 System.Data.Design.TypedDataSetSchemaImporterExtension 架构导入程序扩展生成。
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SSWHistoryReportListDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    public partial class SSWHistoryReportListDataSet : global::System.Data.DataSet {
        
        private HistoryReportListDataTable tableHistoryReportList;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public SSWHistoryReportListDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected SSWHistoryReportListDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HistoryReportList"] != null)) {
                    base.Tables.Add(new HistoryReportListDataTable(ds.Tables["HistoryReportList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HistoryReportListDataTable HistoryReportList {
            get {
                return this.tableHistoryReportList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SSWHistoryReportListDataSet cln = ((SSWHistoryReportListDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HistoryReportList"] != null)) {
                    base.Tables.Add(new HistoryReportListDataTable(ds.Tables["HistoryReportList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableHistoryReportList = ((HistoryReportListDataTable)(base.Tables["HistoryReportList"]));
            if ((initTable == true)) {
                if ((this.tableHistoryReportList != null)) {
                    this.tableHistoryReportList.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SSWHistoryReportListDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SSWHistoryReportListDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHistoryReportList = new HistoryReportListDataTable();
            base.Tables.Add(this.tableHistoryReportList);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeHistoryReportList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SSWHistoryReportListDataSet ds = new SSWHistoryReportListDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void HistoryReportListRowChangeEventHandler(object sender, HistoryReportListRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HistoryReportListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnReportID;
            
            private global::System.Data.DataColumn columnSSWContactID;
            
            private global::System.Data.DataColumn columnEmpUpdate;
            
            private global::System.Data.DataColumn columnGood;
            
            private global::System.Data.DataColumn columnBad;
            
            private global::System.Data.DataColumn columnUnrecognised;
            
            private global::System.Data.DataColumn columnReportDate;
            
            private global::System.Data.DataColumn columnDiagnosticsVersion;
            
            private global::System.Data.DataColumn columnComputerName;
            
            private global::System.Data.DataColumn columnComputerIP;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            private global::System.Data.DataColumn columnDateUpdated;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryReportListDataTable() {
                this.TableName = "HistoryReportList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal HistoryReportListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected HistoryReportListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReportIDColumn {
                get {
                    return this.columnReportID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SSWContactIDColumn {
                get {
                    return this.columnSSWContactID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EmpUpdateColumn {
                get {
                    return this.columnEmpUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GoodColumn {
                get {
                    return this.columnGood;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BadColumn {
                get {
                    return this.columnBad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnrecognisedColumn {
                get {
                    return this.columnUnrecognised;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReportDateColumn {
                get {
                    return this.columnReportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DiagnosticsVersionColumn {
                get {
                    return this.columnDiagnosticsVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ComputerNameColumn {
                get {
                    return this.columnComputerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ComputerIPColumn {
                get {
                    return this.columnComputerIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DateUpdatedColumn {
                get {
                    return this.columnDateUpdated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryReportListRow this[int index] {
                get {
                    return ((HistoryReportListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event HistoryReportListRowChangeEventHandler HistoryReportListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event HistoryReportListRowChangeEventHandler HistoryReportListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event HistoryReportListRowChangeEventHandler HistoryReportListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event HistoryReportListRowChangeEventHandler HistoryReportListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddHistoryReportListRow(HistoryReportListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryReportListRow AddHistoryReportListRow(int ReportID, string SSWContactID, string EmpUpdate, string Good, string Bad, string Unrecognised, System.DateTime ReportDate, string DiagnosticsVersion, string ComputerName, string ComputerIP, System.DateTime DateCreated, System.DateTime DateUpdated) {
                HistoryReportListRow rowHistoryReportListRow = ((HistoryReportListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReportID,
                        SSWContactID,
                        EmpUpdate,
                        Good,
                        Bad,
                        Unrecognised,
                        ReportDate,
                        DiagnosticsVersion,
                        ComputerName,
                        ComputerIP,
                        DateCreated,
                        DateUpdated};
                rowHistoryReportListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHistoryReportListRow);
                return rowHistoryReportListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HistoryReportListDataTable cln = ((HistoryReportListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HistoryReportListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnReportID = base.Columns["ReportID"];
                this.columnSSWContactID = base.Columns["SSWContactID"];
                this.columnEmpUpdate = base.Columns["EmpUpdate"];
                this.columnGood = base.Columns["Good"];
                this.columnBad = base.Columns["Bad"];
                this.columnUnrecognised = base.Columns["Unrecognised"];
                this.columnReportDate = base.Columns["ReportDate"];
                this.columnDiagnosticsVersion = base.Columns["DiagnosticsVersion"];
                this.columnComputerName = base.Columns["ComputerName"];
                this.columnComputerIP = base.Columns["ComputerIP"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnDateUpdated = base.Columns["DateUpdated"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnReportID = new global::System.Data.DataColumn("ReportID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportID);
                this.columnSSWContactID = new global::System.Data.DataColumn("SSWContactID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSWContactID);
                this.columnEmpUpdate = new global::System.Data.DataColumn("EmpUpdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpUpdate);
                this.columnGood = new global::System.Data.DataColumn("Good", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGood);
                this.columnBad = new global::System.Data.DataColumn("Bad", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBad);
                this.columnUnrecognised = new global::System.Data.DataColumn("Unrecognised", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnrecognised);
                this.columnReportDate = new global::System.Data.DataColumn("ReportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportDate);
                this.columnDiagnosticsVersion = new global::System.Data.DataColumn("DiagnosticsVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosticsVersion);
                this.columnComputerName = new global::System.Data.DataColumn("ComputerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComputerName);
                this.columnComputerIP = new global::System.Data.DataColumn("ComputerIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComputerIP);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnDateUpdated = new global::System.Data.DataColumn("DateUpdated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateUpdated);
                this.columnReportDate.DateTimeMode = global::System.Data.DataSetDateTime.Utc;
                this.columnDateCreated.DateTimeMode = global::System.Data.DataSetDateTime.Utc;
                this.columnDateUpdated.DateTimeMode = global::System.Data.DataSetDateTime.Utc;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryReportListRow NewHistoryReportListRow() {
                return ((HistoryReportListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HistoryReportListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HistoryReportListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HistoryReportListRowChanged != null)) {
                    this.HistoryReportListRowChanged(this, new HistoryReportListRowChangeEvent(((HistoryReportListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HistoryReportListRowChanging != null)) {
                    this.HistoryReportListRowChanging(this, new HistoryReportListRowChangeEvent(((HistoryReportListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HistoryReportListRowDeleted != null)) {
                    this.HistoryReportListRowDeleted(this, new HistoryReportListRowChangeEvent(((HistoryReportListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HistoryReportListRowDeleting != null)) {
                    this.HistoryReportListRowDeleting(this, new HistoryReportListRowChangeEvent(((HistoryReportListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveHistoryReportListRow(HistoryReportListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SSWHistoryReportListDataSet ds = new SSWHistoryReportListDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HistoryReportListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HistoryReportListRow : global::System.Data.DataRow {
            
            private HistoryReportListDataTable tableHistoryReportList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal HistoryReportListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHistoryReportList = ((HistoryReportListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ReportID {
                get {
                    try {
                        return ((int)(this[this.tableHistoryReportList.ReportIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HistoryReportList”中列“ReportID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHistoryReportList.ReportIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SSWContactID {
                get {
                    try {
                        return ((string)(this[this.tableHistoryReportList.SSWContactIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HistoryReportList”中列“SSWContactID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHistoryReportList.SSWContactIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EmpUpdate {
                get {
                    try {
                        return ((string)(this[this.tableHistoryReportList.EmpUpdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HistoryReportList”中列“EmpUpdate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHistoryReportList.EmpUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Good {
                get {
                    try {
                        return ((string)(this[this.tableHistoryReportList.GoodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HistoryReportList”中列“Good”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHistoryReportList.GoodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Bad {
                get {
                    try {
                        return ((string)(this[this.tableHistoryReportList.BadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HistoryReportList”中列“Bad”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHistoryReportList.BadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Unrecognised {
                get {
                    try {
                        return ((string)(this[this.tableHistoryReportList.UnrecognisedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HistoryReportList”中列“Unrecognised”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHistoryReportList.UnrecognisedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime ReportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHistoryReportList.ReportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HistoryReportList”中列“ReportDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHistoryReportList.ReportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DiagnosticsVersion {
                get {
                    try {
                        return ((string)(this[this.tableHistoryReportList.DiagnosticsVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HistoryReportList”中列“DiagnosticsVersion”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHistoryReportList.DiagnosticsVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ComputerName {
                get {
                    try {
                        return ((string)(this[this.tableHistoryReportList.ComputerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HistoryReportList”中列“ComputerName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHistoryReportList.ComputerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ComputerIP {
                get {
                    try {
                        return ((string)(this[this.tableHistoryReportList.ComputerIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HistoryReportList”中列“ComputerIP”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHistoryReportList.ComputerIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHistoryReportList.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HistoryReportList”中列“DateCreated”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHistoryReportList.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DateUpdated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHistoryReportList.DateUpdatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HistoryReportList”中列“DateUpdated”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHistoryReportList.DateUpdatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsReportIDNull() {
                return this.IsNull(this.tableHistoryReportList.ReportIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetReportIDNull() {
                this[this.tableHistoryReportList.ReportIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSSWContactIDNull() {
                return this.IsNull(this.tableHistoryReportList.SSWContactIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSSWContactIDNull() {
                this[this.tableHistoryReportList.SSWContactIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEmpUpdateNull() {
                return this.IsNull(this.tableHistoryReportList.EmpUpdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEmpUpdateNull() {
                this[this.tableHistoryReportList.EmpUpdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGoodNull() {
                return this.IsNull(this.tableHistoryReportList.GoodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGoodNull() {
                this[this.tableHistoryReportList.GoodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBadNull() {
                return this.IsNull(this.tableHistoryReportList.BadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBadNull() {
                this[this.tableHistoryReportList.BadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnrecognisedNull() {
                return this.IsNull(this.tableHistoryReportList.UnrecognisedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnrecognisedNull() {
                this[this.tableHistoryReportList.UnrecognisedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsReportDateNull() {
                return this.IsNull(this.tableHistoryReportList.ReportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetReportDateNull() {
                this[this.tableHistoryReportList.ReportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDiagnosticsVersionNull() {
                return this.IsNull(this.tableHistoryReportList.DiagnosticsVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDiagnosticsVersionNull() {
                this[this.tableHistoryReportList.DiagnosticsVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsComputerNameNull() {
                return this.IsNull(this.tableHistoryReportList.ComputerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetComputerNameNull() {
                this[this.tableHistoryReportList.ComputerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsComputerIPNull() {
                return this.IsNull(this.tableHistoryReportList.ComputerIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetComputerIPNull() {
                this[this.tableHistoryReportList.ComputerIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableHistoryReportList.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDateCreatedNull() {
                this[this.tableHistoryReportList.DateCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDateUpdatedNull() {
                return this.IsNull(this.tableHistoryReportList.DateUpdatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDateUpdatedNull() {
                this[this.tableHistoryReportList.DateUpdatedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class HistoryReportListRowChangeEvent : global::System.EventArgs {
            
            private HistoryReportListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryReportListRowChangeEvent(HistoryReportListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HistoryReportListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProductVersion : EntityObject {
        
        private int versionIDField;
        
        private string versionNumberField;
        
        private string versionLatestField;
        
        private string versionForField;
        
        private int productIDField;
        
        private int fileDefinitionIDField;
        
        private string versionXmlAddField;
        
        private string versionUpdateUrlField;
        
        private string versionNameField;
        
        private string versionDescriptionField;
        
        private string versionImageField;
        
        private int versionCounterField;
        
        private System.Nullable<int> versionInternalNumberField;
        
        private string versionRequiredOSField;
        
        private int versionRatingField;
        
        private byte[] sSWTimestampField;
        
        private System.DateTime dateCreatedField;
        
        private string createdByField;
        
        private System.Nullable<System.DateTime> dateUpdatedField;
        
        private string updatedByField;
        
        private EntityReferenceOfFileDefinition fileDefinitionReferenceField;
        
        private EntityReferenceOfProduct productReferenceField;
        
        /// <remarks/>
        public int VersionID {
            get {
                return this.versionIDField;
            }
            set {
                this.versionIDField = value;
            }
        }
        
        /// <remarks/>
        public string VersionNumber {
            get {
                return this.versionNumberField;
            }
            set {
                this.versionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string VersionLatest {
            get {
                return this.versionLatestField;
            }
            set {
                this.versionLatestField = value;
            }
        }
        
        /// <remarks/>
        public string VersionFor {
            get {
                return this.versionForField;
            }
            set {
                this.versionForField = value;
            }
        }
        
        /// <remarks/>
        public int ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        public int FileDefinitionID {
            get {
                return this.fileDefinitionIDField;
            }
            set {
                this.fileDefinitionIDField = value;
            }
        }
        
        /// <remarks/>
        public string VersionXmlAdd {
            get {
                return this.versionXmlAddField;
            }
            set {
                this.versionXmlAddField = value;
            }
        }
        
        /// <remarks/>
        public string VersionUpdateUrl {
            get {
                return this.versionUpdateUrlField;
            }
            set {
                this.versionUpdateUrlField = value;
            }
        }
        
        /// <remarks/>
        public string VersionName {
            get {
                return this.versionNameField;
            }
            set {
                this.versionNameField = value;
            }
        }
        
        /// <remarks/>
        public string VersionDescription {
            get {
                return this.versionDescriptionField;
            }
            set {
                this.versionDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string VersionImage {
            get {
                return this.versionImageField;
            }
            set {
                this.versionImageField = value;
            }
        }
        
        /// <remarks/>
        public int VersionCounter {
            get {
                return this.versionCounterField;
            }
            set {
                this.versionCounterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> VersionInternalNumber {
            get {
                return this.versionInternalNumberField;
            }
            set {
                this.versionInternalNumberField = value;
            }
        }
        
        /// <remarks/>
        public string VersionRequiredOS {
            get {
                return this.versionRequiredOSField;
            }
            set {
                this.versionRequiredOSField = value;
            }
        }
        
        /// <remarks/>
        public int VersionRating {
            get {
                return this.versionRatingField;
            }
            set {
                this.versionRatingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SSWTimestamp {
            get {
                return this.sSWTimestampField;
            }
            set {
                this.sSWTimestampField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatedBy {
            get {
                return this.updatedByField;
            }
            set {
                this.updatedByField = value;
            }
        }
        
        /// <remarks/>
        public EntityReferenceOfFileDefinition FileDefinitionReference {
            get {
                return this.fileDefinitionReferenceField;
            }
            set {
                this.fileDefinitionReferenceField = value;
            }
        }
        
        /// <remarks/>
        public EntityReferenceOfProduct ProductReference {
            get {
                return this.productReferenceField;
            }
            set {
                this.productReferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EntityReferenceOfFileDefinition : EntityReference {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfProductGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfCountOptionClickOnUpdatePage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfManufacturer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfCategory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfProduct))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfFileDefinition))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class EntityReference : RelatedEnd {
        
        private EntityKey entityKeyField;
        
        /// <remarks/>
        public EntityKey EntityKey {
            get {
                return this.entityKeyField;
            }
            set {
                this.entityKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EntityKey {
        
        private string entitySetNameField;
        
        private string entityContainerNameField;
        
        private EntityKeyMember[] entityKeyValuesField;
        
        /// <remarks/>
        public string EntitySetName {
            get {
                return this.entitySetNameField;
            }
            set {
                this.entitySetNameField = value;
            }
        }
        
        /// <remarks/>
        public string EntityContainerName {
            get {
                return this.entityContainerNameField;
            }
            set {
                this.entityContainerNameField = value;
            }
        }
        
        /// <remarks/>
        public EntityKeyMember[] EntityKeyValues {
            get {
                return this.entityKeyValuesField;
            }
            set {
                this.entityKeyValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EntityKeyMember {
        
        private string keyField;
        
        private object valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfProductGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfCountOptionClickOnUpdatePage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfManufacturer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfCategory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfProduct))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfFileDefinition))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class RelatedEnd {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FileDefinition))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductVersion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Product))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Category))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class StructuralObject {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FileDefinition))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductVersion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Product))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Category))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class EntityObject : StructuralObject {
        
        private EntityKey entityKeyField;
        
        /// <remarks/>
        public EntityKey EntityKey {
            get {
                return this.entityKeyField;
            }
            set {
                this.entityKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FileDefinition : EntityObject {
        
        private int fileDefinitionIDField;
        
        private string fileDefinitionNameField;
        
        private string fileDefinitionVersionField;
        
        private System.Nullable<double> fileDefinitionSizeField;
        
        private System.Nullable<System.DateTime> fileDefinitionDateField;
        
        private byte[] sSWTimestampField;
        
        private System.DateTime dateCreatedField;
        
        private string createdByField;
        
        private System.Nullable<System.DateTime> dateUpdatedField;
        
        private string updatedByField;
        
        /// <remarks/>
        public int FileDefinitionID {
            get {
                return this.fileDefinitionIDField;
            }
            set {
                this.fileDefinitionIDField = value;
            }
        }
        
        /// <remarks/>
        public string FileDefinitionName {
            get {
                return this.fileDefinitionNameField;
            }
            set {
                this.fileDefinitionNameField = value;
            }
        }
        
        /// <remarks/>
        public string FileDefinitionVersion {
            get {
                return this.fileDefinitionVersionField;
            }
            set {
                this.fileDefinitionVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> FileDefinitionSize {
            get {
                return this.fileDefinitionSizeField;
            }
            set {
                this.fileDefinitionSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FileDefinitionDate {
            get {
                return this.fileDefinitionDateField;
            }
            set {
                this.fileDefinitionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SSWTimestamp {
            get {
                return this.sSWTimestampField;
            }
            set {
                this.sSWTimestampField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatedBy {
            get {
                return this.updatedByField;
            }
            set {
                this.updatedByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Product : EntityObject {
        
        private int productIDField;
        
        private string productNameField;
        
        private string productDescriptionField;
        
        private string productLatestField;
        
        private int groupIDField;
        
        private byte[] sSWTimestampField;
        
        private System.DateTime dateCreatedField;
        
        private string createdByField;
        
        private System.Nullable<System.DateTime> dateUpdatedField;
        
        private string updatedByField;
        
        private System.Nullable<bool> allowUpdateByUIField;
        
        private string updateByUIImageField;
        
        private EntityReferenceOfCountOptionClickOnUpdatePage countOptionClickOnUpdatePageReferenceField;
        
        private EntityReferenceOfProductGroup productGroupReferenceField;
        
        /// <remarks/>
        public int ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProductDescription {
            get {
                return this.productDescriptionField;
            }
            set {
                this.productDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ProductLatest {
            get {
                return this.productLatestField;
            }
            set {
                this.productLatestField = value;
            }
        }
        
        /// <remarks/>
        public int GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SSWTimestamp {
            get {
                return this.sSWTimestampField;
            }
            set {
                this.sSWTimestampField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatedBy {
            get {
                return this.updatedByField;
            }
            set {
                this.updatedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> AllowUpdateByUI {
            get {
                return this.allowUpdateByUIField;
            }
            set {
                this.allowUpdateByUIField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateByUIImage {
            get {
                return this.updateByUIImageField;
            }
            set {
                this.updateByUIImageField = value;
            }
        }
        
        /// <remarks/>
        public EntityReferenceOfCountOptionClickOnUpdatePage CountOptionClickOnUpdatePageReference {
            get {
                return this.countOptionClickOnUpdatePageReferenceField;
            }
            set {
                this.countOptionClickOnUpdatePageReferenceField = value;
            }
        }
        
        /// <remarks/>
        public EntityReferenceOfProductGroup ProductGroupReference {
            get {
                return this.productGroupReferenceField;
            }
            set {
                this.productGroupReferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EntityReferenceOfCountOptionClickOnUpdatePage : EntityReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EntityReferenceOfProductGroup : EntityReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProductGroup : EntityObject {
        
        private int groupIDField;
        
        private string groupNameField;
        
        private string groupDescriptionField;
        
        private int manufacturerIDField;
        
        private int categoryIDField;
        
        private byte[] sSWTimestampField;
        
        private System.DateTime dateCreatedField;
        
        private string createdByField;
        
        private System.Nullable<System.DateTime> dateUpdatedField;
        
        private string updatedByField;
        
        private EntityReferenceOfCategory categoryReferenceField;
        
        private EntityReferenceOfManufacturer manufacturerReferenceField;
        
        /// <remarks/>
        public int GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupDescription {
            get {
                return this.groupDescriptionField;
            }
            set {
                this.groupDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int ManufacturerID {
            get {
                return this.manufacturerIDField;
            }
            set {
                this.manufacturerIDField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SSWTimestamp {
            get {
                return this.sSWTimestampField;
            }
            set {
                this.sSWTimestampField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatedBy {
            get {
                return this.updatedByField;
            }
            set {
                this.updatedByField = value;
            }
        }
        
        /// <remarks/>
        public EntityReferenceOfCategory CategoryReference {
            get {
                return this.categoryReferenceField;
            }
            set {
                this.categoryReferenceField = value;
            }
        }
        
        /// <remarks/>
        public EntityReferenceOfManufacturer ManufacturerReference {
            get {
                return this.manufacturerReferenceField;
            }
            set {
                this.manufacturerReferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EntityReferenceOfCategory : EntityReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EntityReferenceOfManufacturer : EntityReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Category : EntityObject {
        
        private int categoryIDField;
        
        private string categoryNameField;
        
        private byte[] sSWTimestampField;
        
        private System.DateTime dateCreatedField;
        
        private string createdByField;
        
        private System.Nullable<System.DateTime> dateUpdatedField;
        
        private string updatedByField;
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SSWTimestamp {
            get {
                return this.sSWTimestampField;
            }
            set {
                this.sSWTimestampField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatedBy {
            get {
                return this.updatedByField;
            }
            set {
                this.updatedByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EntityReferenceOfProduct : EntityReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetHistoryReportListCompletedEventHandler(object sender, GetHistoryReportListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryReportListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryReportListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SSWHistoryReportListDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SSWHistoryReportListDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SSWDiagnosticsNewReportCompletedEventHandler(object sender, SSWDiagnosticsNewReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSWDiagnosticsNewReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSWDiagnosticsNewReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SSWDiagnosticsGetReportCompletedEventHandler(object sender, SSWDiagnosticsGetReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSWDiagnosticsGetReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSWDiagnosticsGetReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SSWDiagnosticsVoteCompletedEventHandler(object sender, SSWDiagnosticsVoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSWDiagnosticsVoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSWDiagnosticsVoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SSWDiagnosticsGetVersionVoteCompletedEventHandler(object sender, SSWDiagnosticsGetVersionVoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSWDiagnosticsGetVersionVoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSWDiagnosticsGetVersionVoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SSWDiagnosticsGetVoteListCompletedEventHandler(object sender, SSWDiagnosticsGetVoteListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSWDiagnosticsGetVoteListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSWDiagnosticsGetVoteListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SSWDiagnosticsGetVoteAgreePercentCompletedEventHandler(object sender, SSWDiagnosticsGetVoteAgreePercentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSWDiagnosticsGetVoteAgreePercentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSWDiagnosticsGetVoteAgreePercentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SSWDiagnosticsUploadUsageReportCompletedEventHandler(object sender, SSWDiagnosticsUploadUsageReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSWDiagnosticsUploadUsageReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSWDiagnosticsUploadUsageReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SSWDiagnosticsGetUsageReportCompletedEventHandler(object sender, SSWDiagnosticsGetUsageReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSWDiagnosticsGetUsageReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSWDiagnosticsGetUsageReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SSWDiagnosticsGetHealthUsersCompletedEventHandler(object sender, SSWDiagnosticsGetHealthUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSWDiagnosticsGetHealthUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSWDiagnosticsGetHealthUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SSWDiagnosticsGetProductNameCompletedEventHandler(object sender, SSWDiagnosticsGetProductNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSWDiagnosticsGetProductNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSWDiagnosticsGetProductNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddUnrecognizedVersionLogCompletedEventHandler(object sender, AddUnrecognizedVersionLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUnrecognizedVersionLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUnrecognizedVersionLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddNewProductVersionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GenerateNewVersionCompletedEventHandler(object sender, GenerateNewVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateNewVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateNewVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductVersion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductVersion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProductCategoryCompletedEventHandler(object sender, GetProductCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Category[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Category[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProductGroupByCateogryIDCompletedEventHandler(object sender, GetProductGroupByCateogryIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductGroupByCateogryIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductGroupByCateogryIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProductByGroupIDCompletedEventHandler(object sender, GetProductByGroupIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductByGroupIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductByGroupIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProductVersionHistoryCompletedEventHandler(object sender, GetProductVersionHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductVersionHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductVersionHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductVersion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductVersion[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetFileDeifinitionsCompletedEventHandler(object sender, GetFileDeifinitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileDeifinitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileDeifinitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileDefinition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileDefinition[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591