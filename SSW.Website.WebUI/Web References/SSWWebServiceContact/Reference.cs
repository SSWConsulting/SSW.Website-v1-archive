//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace SSWWebServiceContact {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ContactSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Contact : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ClientDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientEmailExistSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientProductIntrestedUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientContactLoginSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientSmallDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferralSourceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPasswordReminderEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientSendPasswordReminderEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientSendUpdateDetailsReminderEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback zsValidateClientDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientContactCurrencyIDSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientContactCurrencyIDUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientContactPrimaryContactUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientDiaryCategoryNoteTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientDiaryInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientDiaryInsertWithClientTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientInvoiceLastRegisteredOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientOrderConfirmationEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientOrderConfirmationEmail2_TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientOrderConfirmationEmail2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientProductInterestedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientSubmitOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientSubmitOrder2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencySelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailFooterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback zsValidateClientDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback zzDummyOperationCompleted;
        
        private System.Threading.SendOrPostCallback zzstrDummyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientContactConcurrencySelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientContactHideOnWebSelectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientContactHideOnWebUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientPurchasedProductsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Contact() {
            this.Url = "http://localhost:1566/Contact.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ClientDetailCompletedEventHandler ClientDetailCompleted;
        
        /// <remarks/>
        public event ClientEmailExistSelectCompletedEventHandler ClientEmailExistSelectCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event ClientProductIntrestedUpdateCompletedEventHandler ClientProductIntrestedUpdateCompleted;
        
        /// <remarks/>
        public event ClientContactLoginSelectCompletedEventHandler ClientContactLoginSelectCompleted;
        
        /// <remarks/>
        public event ClientUpdateCompletedEventHandler ClientUpdateCompleted;
        
        /// <remarks/>
        public event ClientRemoveCompletedEventHandler ClientRemoveCompleted;
        
        /// <remarks/>
        public event ClientSmallDetailCompletedEventHandler ClientSmallDetailCompleted;
        
        /// <remarks/>
        public event GetClientIDCompletedEventHandler GetClientIDCompleted;
        
        /// <remarks/>
        public event GetReferralSourceListCompletedEventHandler GetReferralSourceListCompleted;
        
        /// <remarks/>
        public event SendPasswordReminderEmailCompletedEventHandler SendPasswordReminderEmailCompleted;
        
        /// <remarks/>
        public event ClientSendPasswordReminderEmailCompletedEventHandler ClientSendPasswordReminderEmailCompleted;
        
        /// <remarks/>
        public event ClientSendUpdateDetailsReminderEmailCompletedEventHandler ClientSendUpdateDetailsReminderEmailCompleted;
        
        /// <remarks/>
        public event zsValidateClientDetailCompletedEventHandler zsValidateClientDetailCompleted;
        
        /// <remarks/>
        public event ClientContactCurrencyIDSelectCompletedEventHandler ClientContactCurrencyIDSelectCompleted;
        
        /// <remarks/>
        public event ClientContactCurrencyIDUpdateCompletedEventHandler ClientContactCurrencyIDUpdateCompleted;
        
        /// <remarks/>
        public event ClientContactPrimaryContactUpdateCompletedEventHandler ClientContactPrimaryContactUpdateCompleted;
        
        /// <remarks/>
        public event ClientDiaryCategoryNoteTextCompletedEventHandler ClientDiaryCategoryNoteTextCompleted;
        
        /// <remarks/>
        public event ClientDiaryInsertCompletedEventHandler ClientDiaryInsertCompleted;
        
        /// <remarks/>
        public event ClientDiaryInsertWithClientTimeCompletedEventHandler ClientDiaryInsertWithClientTimeCompleted;
        
        /// <remarks/>
        public event ClientInvoiceLastRegisteredCompletedEventHandler ClientInvoiceLastRegisteredCompleted;
        
        /// <remarks/>
        public event ClientOrderConfirmationEmailCompletedEventHandler ClientOrderConfirmationEmailCompleted;
        
        /// <remarks/>
        public event ClientOrderConfirmationEmail2_TestCompletedEventHandler ClientOrderConfirmationEmail2_TestCompleted;
        
        /// <remarks/>
        public event ClientOrderConfirmationEmail2CompletedEventHandler ClientOrderConfirmationEmail2Completed;
        
        /// <remarks/>
        public event ClientProductInterestedCompletedEventHandler ClientProductInterestedCompleted;
        
        /// <remarks/>
        public event ClientSubmitOrderCompletedEventHandler ClientSubmitOrderCompleted;
        
        /// <remarks/>
        public event ClientSubmitOrder2CompletedEventHandler ClientSubmitOrder2Completed;
        
        /// <remarks/>
        public event CurrencySelectCompletedEventHandler CurrencySelectCompleted;
        
        /// <remarks/>
        public event GetEmailFooterCompletedEventHandler GetEmailFooterCompleted;
        
        /// <remarks/>
        public event SendMailCompletedEventHandler SendMailCompleted;
        
        /// <remarks/>
        public event zsValidateClientDeleteCompletedEventHandler zsValidateClientDeleteCompleted;
        
        /// <remarks/>
        public event zzDummyCompletedEventHandler zzDummyCompleted;
        
        /// <remarks/>
        public event zzstrDummyCompletedEventHandler zzstrDummyCompleted;
        
        /// <remarks/>
        public event ClientContactConcurrencySelectCompletedEventHandler ClientContactConcurrencySelectCompleted;
        
        /// <remarks/>
        public event ClientContactHideOnWebSelectCompletedEventHandler ClientContactHideOnWebSelectCompleted;
        
        /// <remarks/>
        public event ClientContactHideOnWebUpdateCompletedEventHandler ClientContactHideOnWebUpdateCompleted;
        
        /// <remarks/>
        public event GetClientPurchasedProductsCompletedEventHandler GetClientPurchasedProductsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsContactFullDetails ClientDetail(int intContactID) {
            object[] results = this.Invoke("ClientDetail", new object[] {
                        intContactID});
            return ((clsContactFullDetails)(results[0]));
        }
        
        /// <remarks/>
        public void ClientDetailAsync(int intContactID) {
            this.ClientDetailAsync(intContactID, null);
        }
        
        /// <remarks/>
        public void ClientDetailAsync(int intContactID, object userState) {
            if ((this.ClientDetailOperationCompleted == null)) {
                this.ClientDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientDetailOperationCompleted);
            }
            this.InvokeAsync("ClientDetail", new object[] {
                        intContactID}, this.ClientDetailOperationCompleted, userState);
        }
        
        private void OnClientDetailOperationCompleted(object arg) {
            if ((this.ClientDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientDetailCompleted(this, new ClientDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientEmailExistSelect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClientEmailExistSelect(string strEmail) {
            object[] results = this.Invoke("ClientEmailExistSelect", new object[] {
                        strEmail});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClientEmailExistSelectAsync(string strEmail) {
            this.ClientEmailExistSelectAsync(strEmail, null);
        }
        
        /// <remarks/>
        public void ClientEmailExistSelectAsync(string strEmail, object userState) {
            if ((this.ClientEmailExistSelectOperationCompleted == null)) {
                this.ClientEmailExistSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientEmailExistSelectOperationCompleted);
            }
            this.InvokeAsync("ClientEmailExistSelect", new object[] {
                        strEmail}, this.ClientEmailExistSelectOperationCompleted, userState);
        }
        
        private void OnClientEmailExistSelectOperationCompleted(object arg) {
            if ((this.ClientEmailExistSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientEmailExistSelectCompleted(this, new ClientEmailExistSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangePassword(int intContactID, string strPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        intContactID,
                        strPassword});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(int intContactID, string strPassword) {
            this.ChangePasswordAsync(intContactID, strPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(int intContactID, string strPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        intContactID,
                        strPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientProductIntrestedUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClientProductIntrestedUpdate(int intContactID, object[] aryProductSelect) {
            this.Invoke("ClientProductIntrestedUpdate", new object[] {
                        intContactID,
                        aryProductSelect});
        }
        
        /// <remarks/>
        public void ClientProductIntrestedUpdateAsync(int intContactID, object[] aryProductSelect) {
            this.ClientProductIntrestedUpdateAsync(intContactID, aryProductSelect, null);
        }
        
        /// <remarks/>
        public void ClientProductIntrestedUpdateAsync(int intContactID, object[] aryProductSelect, object userState) {
            if ((this.ClientProductIntrestedUpdateOperationCompleted == null)) {
                this.ClientProductIntrestedUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientProductIntrestedUpdateOperationCompleted);
            }
            this.InvokeAsync("ClientProductIntrestedUpdate", new object[] {
                        intContactID,
                        aryProductSelect}, this.ClientProductIntrestedUpdateOperationCompleted, userState);
        }
        
        private void OnClientProductIntrestedUpdateOperationCompleted(object arg) {
            if ((this.ClientProductIntrestedUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientProductIntrestedUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientContactLoginSelect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClientContactLoginSelect(string strEmail, string strPassword, string strScreenRes, string strBrowserType, string strNote, string referrerURL, string referrerInfo) {
            object[] results = this.Invoke("ClientContactLoginSelect", new object[] {
                        strEmail,
                        strPassword,
                        strScreenRes,
                        strBrowserType,
                        strNote,
                        referrerURL,
                        referrerInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClientContactLoginSelectAsync(string strEmail, string strPassword, string strScreenRes, string strBrowserType, string strNote, string referrerURL, string referrerInfo) {
            this.ClientContactLoginSelectAsync(strEmail, strPassword, strScreenRes, strBrowserType, strNote, referrerURL, referrerInfo, null);
        }
        
        /// <remarks/>
        public void ClientContactLoginSelectAsync(string strEmail, string strPassword, string strScreenRes, string strBrowserType, string strNote, string referrerURL, string referrerInfo, object userState) {
            if ((this.ClientContactLoginSelectOperationCompleted == null)) {
                this.ClientContactLoginSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientContactLoginSelectOperationCompleted);
            }
            this.InvokeAsync("ClientContactLoginSelect", new object[] {
                        strEmail,
                        strPassword,
                        strScreenRes,
                        strBrowserType,
                        strNote,
                        referrerURL,
                        referrerInfo}, this.ClientContactLoginSelectOperationCompleted, userState);
        }
        
        private void OnClientContactLoginSelectOperationCompleted(object arg) {
            if ((this.ClientContactLoginSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientContactLoginSelectCompleted(this, new ClientContactLoginSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClientUpdate(int intContactID, clsContactFullDetails objContactDetails, ref bool bolConcurrencyCheck) {
            object[] results = this.Invoke("ClientUpdate", new object[] {
                        intContactID,
                        objContactDetails,
                        bolConcurrencyCheck});
            bolConcurrencyCheck = ((bool)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClientUpdateAsync(int intContactID, clsContactFullDetails objContactDetails, bool bolConcurrencyCheck) {
            this.ClientUpdateAsync(intContactID, objContactDetails, bolConcurrencyCheck, null);
        }
        
        /// <remarks/>
        public void ClientUpdateAsync(int intContactID, clsContactFullDetails objContactDetails, bool bolConcurrencyCheck, object userState) {
            if ((this.ClientUpdateOperationCompleted == null)) {
                this.ClientUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientUpdateOperationCompleted);
            }
            this.InvokeAsync("ClientUpdate", new object[] {
                        intContactID,
                        objContactDetails,
                        bolConcurrencyCheck}, this.ClientUpdateOperationCompleted, userState);
        }
        
        private void OnClientUpdateOperationCompleted(object arg) {
            if ((this.ClientUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientUpdateCompleted(this, new ClientUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientRemove", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClientRemove(int intContactID, string strHideAccountReason) {
            object[] results = this.Invoke("ClientRemove", new object[] {
                        intContactID,
                        strHideAccountReason});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClientRemoveAsync(int intContactID, string strHideAccountReason) {
            this.ClientRemoveAsync(intContactID, strHideAccountReason, null);
        }
        
        /// <remarks/>
        public void ClientRemoveAsync(int intContactID, string strHideAccountReason, object userState) {
            if ((this.ClientRemoveOperationCompleted == null)) {
                this.ClientRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientRemoveOperationCompleted);
            }
            this.InvokeAsync("ClientRemove", new object[] {
                        intContactID,
                        strHideAccountReason}, this.ClientRemoveOperationCompleted, userState);
        }
        
        private void OnClientRemoveOperationCompleted(object arg) {
            if ((this.ClientRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientRemoveCompleted(this, new ClientRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientSmallDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsContactSmallDetails ClientSmallDetail(int intContactID) {
            object[] results = this.Invoke("ClientSmallDetail", new object[] {
                        intContactID});
            return ((clsContactSmallDetails)(results[0]));
        }
        
        /// <remarks/>
        public void ClientSmallDetailAsync(int intContactID) {
            this.ClientSmallDetailAsync(intContactID, null);
        }
        
        /// <remarks/>
        public void ClientSmallDetailAsync(int intContactID, object userState) {
            if ((this.ClientSmallDetailOperationCompleted == null)) {
                this.ClientSmallDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientSmallDetailOperationCompleted);
            }
            this.InvokeAsync("ClientSmallDetail", new object[] {
                        intContactID}, this.ClientSmallDetailOperationCompleted, userState);
        }
        
        private void OnClientSmallDetailOperationCompleted(object arg) {
            if ((this.ClientSmallDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientSmallDetailCompleted(this, new ClientSmallDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClientID(int intContactID) {
            object[] results = this.Invoke("GetClientID", new object[] {
                        intContactID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientIDAsync(int intContactID) {
            this.GetClientIDAsync(intContactID, null);
        }
        
        /// <remarks/>
        public void GetClientIDAsync(int intContactID, object userState) {
            if ((this.GetClientIDOperationCompleted == null)) {
                this.GetClientIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientIDOperationCompleted);
            }
            this.InvokeAsync("GetClientID", new object[] {
                        intContactID}, this.GetClientIDOperationCompleted, userState);
        }
        
        private void OnGetClientIDOperationCompleted(object arg) {
            if ((this.GetClientIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientIDCompleted(this, new GetClientIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReferralSourceList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsReferralSource[] GetReferralSourceList() {
            object[] results = this.Invoke("GetReferralSourceList", new object[0]);
            return ((clsReferralSource[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferralSourceListAsync() {
            this.GetReferralSourceListAsync(null);
        }
        
        /// <remarks/>
        public void GetReferralSourceListAsync(object userState) {
            if ((this.GetReferralSourceListOperationCompleted == null)) {
                this.GetReferralSourceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferralSourceListOperationCompleted);
            }
            this.InvokeAsync("GetReferralSourceList", new object[0], this.GetReferralSourceListOperationCompleted, userState);
        }
        
        private void OnGetReferralSourceListOperationCompleted(object arg) {
            if ((this.GetReferralSourceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferralSourceListCompleted(this, new GetReferralSourceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendPasswordReminderEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CoBool SendPasswordReminderEmail(string strContactEmail) {
            object[] results = this.Invoke("SendPasswordReminderEmail", new object[] {
                        strContactEmail});
            return ((CoBool)(results[0]));
        }
        
        /// <remarks/>
        public void SendPasswordReminderEmailAsync(string strContactEmail) {
            this.SendPasswordReminderEmailAsync(strContactEmail, null);
        }
        
        /// <remarks/>
        public void SendPasswordReminderEmailAsync(string strContactEmail, object userState) {
            if ((this.SendPasswordReminderEmailOperationCompleted == null)) {
                this.SendPasswordReminderEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPasswordReminderEmailOperationCompleted);
            }
            this.InvokeAsync("SendPasswordReminderEmail", new object[] {
                        strContactEmail}, this.SendPasswordReminderEmailOperationCompleted, userState);
        }
        
        private void OnSendPasswordReminderEmailOperationCompleted(object arg) {
            if ((this.SendPasswordReminderEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPasswordReminderEmailCompleted(this, new SendPasswordReminderEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientSendPasswordReminderEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ClientSendPasswordReminderEmail(string strContactEmail) {
            object[] results = this.Invoke("ClientSendPasswordReminderEmail", new object[] {
                        strContactEmail});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ClientSendPasswordReminderEmailAsync(string strContactEmail) {
            this.ClientSendPasswordReminderEmailAsync(strContactEmail, null);
        }
        
        /// <remarks/>
        public void ClientSendPasswordReminderEmailAsync(string strContactEmail, object userState) {
            if ((this.ClientSendPasswordReminderEmailOperationCompleted == null)) {
                this.ClientSendPasswordReminderEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientSendPasswordReminderEmailOperationCompleted);
            }
            this.InvokeAsync("ClientSendPasswordReminderEmail", new object[] {
                        strContactEmail}, this.ClientSendPasswordReminderEmailOperationCompleted, userState);
        }
        
        private void OnClientSendPasswordReminderEmailOperationCompleted(object arg) {
            if ((this.ClientSendPasswordReminderEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientSendPasswordReminderEmailCompleted(this, new ClientSendPasswordReminderEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientSendUpdateDetailsReminderEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ClientSendUpdateDetailsReminderEmail(int intContactID) {
            object[] results = this.Invoke("ClientSendUpdateDetailsReminderEmail", new object[] {
                        intContactID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ClientSendUpdateDetailsReminderEmailAsync(int intContactID) {
            this.ClientSendUpdateDetailsReminderEmailAsync(intContactID, null);
        }
        
        /// <remarks/>
        public void ClientSendUpdateDetailsReminderEmailAsync(int intContactID, object userState) {
            if ((this.ClientSendUpdateDetailsReminderEmailOperationCompleted == null)) {
                this.ClientSendUpdateDetailsReminderEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientSendUpdateDetailsReminderEmailOperationCompleted);
            }
            this.InvokeAsync("ClientSendUpdateDetailsReminderEmail", new object[] {
                        intContactID}, this.ClientSendUpdateDetailsReminderEmailOperationCompleted, userState);
        }
        
        private void OnClientSendUpdateDetailsReminderEmailOperationCompleted(object arg) {
            if ((this.ClientSendUpdateDetailsReminderEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientSendUpdateDetailsReminderEmailCompleted(this, new ClientSendUpdateDetailsReminderEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/zsValidateClientDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsContactFullDetails zsValidateClientDetail(int intContactID) {
            object[] results = this.Invoke("zsValidateClientDetail", new object[] {
                        intContactID});
            return ((clsContactFullDetails)(results[0]));
        }
        
        /// <remarks/>
        public void zsValidateClientDetailAsync(int intContactID) {
            this.zsValidateClientDetailAsync(intContactID, null);
        }
        
        /// <remarks/>
        public void zsValidateClientDetailAsync(int intContactID, object userState) {
            if ((this.zsValidateClientDetailOperationCompleted == null)) {
                this.zsValidateClientDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnzsValidateClientDetailOperationCompleted);
            }
            this.InvokeAsync("zsValidateClientDetail", new object[] {
                        intContactID}, this.zsValidateClientDetailOperationCompleted, userState);
        }
        
        private void OnzsValidateClientDetailOperationCompleted(object arg) {
            if ((this.zsValidateClientDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.zsValidateClientDetailCompleted(this, new zsValidateClientDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientContactCurrencyIDSelect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClientContactCurrencyIDSelect(int ContactID) {
            object[] results = this.Invoke("ClientContactCurrencyIDSelect", new object[] {
                        ContactID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClientContactCurrencyIDSelectAsync(int ContactID) {
            this.ClientContactCurrencyIDSelectAsync(ContactID, null);
        }
        
        /// <remarks/>
        public void ClientContactCurrencyIDSelectAsync(int ContactID, object userState) {
            if ((this.ClientContactCurrencyIDSelectOperationCompleted == null)) {
                this.ClientContactCurrencyIDSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientContactCurrencyIDSelectOperationCompleted);
            }
            this.InvokeAsync("ClientContactCurrencyIDSelect", new object[] {
                        ContactID}, this.ClientContactCurrencyIDSelectOperationCompleted, userState);
        }
        
        private void OnClientContactCurrencyIDSelectOperationCompleted(object arg) {
            if ((this.ClientContactCurrencyIDSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientContactCurrencyIDSelectCompleted(this, new ClientContactCurrencyIDSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientContactCurrencyIDUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClientContactCurrencyIDUpdate(int ContactID, string CurrencyID) {
            this.Invoke("ClientContactCurrencyIDUpdate", new object[] {
                        ContactID,
                        CurrencyID});
        }
        
        /// <remarks/>
        public void ClientContactCurrencyIDUpdateAsync(int ContactID, string CurrencyID) {
            this.ClientContactCurrencyIDUpdateAsync(ContactID, CurrencyID, null);
        }
        
        /// <remarks/>
        public void ClientContactCurrencyIDUpdateAsync(int ContactID, string CurrencyID, object userState) {
            if ((this.ClientContactCurrencyIDUpdateOperationCompleted == null)) {
                this.ClientContactCurrencyIDUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientContactCurrencyIDUpdateOperationCompleted);
            }
            this.InvokeAsync("ClientContactCurrencyIDUpdate", new object[] {
                        ContactID,
                        CurrencyID}, this.ClientContactCurrencyIDUpdateOperationCompleted, userState);
        }
        
        private void OnClientContactCurrencyIDUpdateOperationCompleted(object arg) {
            if ((this.ClientContactCurrencyIDUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientContactCurrencyIDUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientContactPrimaryContactUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClientContactPrimaryContactUpdate(int ContactID, int PrimaryContact) {
            this.Invoke("ClientContactPrimaryContactUpdate", new object[] {
                        ContactID,
                        PrimaryContact});
        }
        
        /// <remarks/>
        public void ClientContactPrimaryContactUpdateAsync(int ContactID, int PrimaryContact) {
            this.ClientContactPrimaryContactUpdateAsync(ContactID, PrimaryContact, null);
        }
        
        /// <remarks/>
        public void ClientContactPrimaryContactUpdateAsync(int ContactID, int PrimaryContact, object userState) {
            if ((this.ClientContactPrimaryContactUpdateOperationCompleted == null)) {
                this.ClientContactPrimaryContactUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientContactPrimaryContactUpdateOperationCompleted);
            }
            this.InvokeAsync("ClientContactPrimaryContactUpdate", new object[] {
                        ContactID,
                        PrimaryContact}, this.ClientContactPrimaryContactUpdateOperationCompleted, userState);
        }
        
        private void OnClientContactPrimaryContactUpdateOperationCompleted(object arg) {
            if ((this.ClientContactPrimaryContactUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientContactPrimaryContactUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientDiaryCategoryNoteText", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClientDiaryCategoryNoteText(string CategoryID) {
            object[] results = this.Invoke("ClientDiaryCategoryNoteText", new object[] {
                        CategoryID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClientDiaryCategoryNoteTextAsync(string CategoryID) {
            this.ClientDiaryCategoryNoteTextAsync(CategoryID, null);
        }
        
        /// <remarks/>
        public void ClientDiaryCategoryNoteTextAsync(string CategoryID, object userState) {
            if ((this.ClientDiaryCategoryNoteTextOperationCompleted == null)) {
                this.ClientDiaryCategoryNoteTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientDiaryCategoryNoteTextOperationCompleted);
            }
            this.InvokeAsync("ClientDiaryCategoryNoteText", new object[] {
                        CategoryID}, this.ClientDiaryCategoryNoteTextOperationCompleted, userState);
        }
        
        private void OnClientDiaryCategoryNoteTextOperationCompleted(object arg) {
            if ((this.ClientDiaryCategoryNoteTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientDiaryCategoryNoteTextCompleted(this, new ClientDiaryCategoryNoteTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientDiaryInsert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClientDiaryInsert(int intContactID, string strCategoryID, string strDownloadID, string strDownloadVersionNo, string strProdID, string strRegistrationUnlockKey, string strRegistrationComputerID, string strRegistrationComputerName) {
            this.Invoke("ClientDiaryInsert", new object[] {
                        intContactID,
                        strCategoryID,
                        strDownloadID,
                        strDownloadVersionNo,
                        strProdID,
                        strRegistrationUnlockKey,
                        strRegistrationComputerID,
                        strRegistrationComputerName});
        }
        
        /// <remarks/>
        public void ClientDiaryInsertAsync(int intContactID, string strCategoryID, string strDownloadID, string strDownloadVersionNo, string strProdID, string strRegistrationUnlockKey, string strRegistrationComputerID, string strRegistrationComputerName) {
            this.ClientDiaryInsertAsync(intContactID, strCategoryID, strDownloadID, strDownloadVersionNo, strProdID, strRegistrationUnlockKey, strRegistrationComputerID, strRegistrationComputerName, null);
        }
        
        /// <remarks/>
        public void ClientDiaryInsertAsync(int intContactID, string strCategoryID, string strDownloadID, string strDownloadVersionNo, string strProdID, string strRegistrationUnlockKey, string strRegistrationComputerID, string strRegistrationComputerName, object userState) {
            if ((this.ClientDiaryInsertOperationCompleted == null)) {
                this.ClientDiaryInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientDiaryInsertOperationCompleted);
            }
            this.InvokeAsync("ClientDiaryInsert", new object[] {
                        intContactID,
                        strCategoryID,
                        strDownloadID,
                        strDownloadVersionNo,
                        strProdID,
                        strRegistrationUnlockKey,
                        strRegistrationComputerID,
                        strRegistrationComputerName}, this.ClientDiaryInsertOperationCompleted, userState);
        }
        
        private void OnClientDiaryInsertOperationCompleted(object arg) {
            if ((this.ClientDiaryInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientDiaryInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientDiaryInsertWithClientTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClientDiaryInsertWithClientTime(int intContactID, string strCategoryID, string strDownloadID, string strDownloadVersionNo, string strProdID, string strRegistrationUnlockKey, string strRegistrationComputerID, string strRegistrationComputerName, System.DateTime dteClientTime) {
            this.Invoke("ClientDiaryInsertWithClientTime", new object[] {
                        intContactID,
                        strCategoryID,
                        strDownloadID,
                        strDownloadVersionNo,
                        strProdID,
                        strRegistrationUnlockKey,
                        strRegistrationComputerID,
                        strRegistrationComputerName,
                        dteClientTime});
        }
        
        /// <remarks/>
        public void ClientDiaryInsertWithClientTimeAsync(int intContactID, string strCategoryID, string strDownloadID, string strDownloadVersionNo, string strProdID, string strRegistrationUnlockKey, string strRegistrationComputerID, string strRegistrationComputerName, System.DateTime dteClientTime) {
            this.ClientDiaryInsertWithClientTimeAsync(intContactID, strCategoryID, strDownloadID, strDownloadVersionNo, strProdID, strRegistrationUnlockKey, strRegistrationComputerID, strRegistrationComputerName, dteClientTime, null);
        }
        
        /// <remarks/>
        public void ClientDiaryInsertWithClientTimeAsync(int intContactID, string strCategoryID, string strDownloadID, string strDownloadVersionNo, string strProdID, string strRegistrationUnlockKey, string strRegistrationComputerID, string strRegistrationComputerName, System.DateTime dteClientTime, object userState) {
            if ((this.ClientDiaryInsertWithClientTimeOperationCompleted == null)) {
                this.ClientDiaryInsertWithClientTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientDiaryInsertWithClientTimeOperationCompleted);
            }
            this.InvokeAsync("ClientDiaryInsertWithClientTime", new object[] {
                        intContactID,
                        strCategoryID,
                        strDownloadID,
                        strDownloadVersionNo,
                        strProdID,
                        strRegistrationUnlockKey,
                        strRegistrationComputerID,
                        strRegistrationComputerName,
                        dteClientTime}, this.ClientDiaryInsertWithClientTimeOperationCompleted, userState);
        }
        
        private void OnClientDiaryInsertWithClientTimeOperationCompleted(object arg) {
            if ((this.ClientDiaryInsertWithClientTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientDiaryInsertWithClientTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientInvoiceLastRegistered", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime ClientInvoiceLastRegistered(int intContactID, string strProdID) {
            object[] results = this.Invoke("ClientInvoiceLastRegistered", new object[] {
                        intContactID,
                        strProdID});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void ClientInvoiceLastRegisteredAsync(int intContactID, string strProdID) {
            this.ClientInvoiceLastRegisteredAsync(intContactID, strProdID, null);
        }
        
        /// <remarks/>
        public void ClientInvoiceLastRegisteredAsync(int intContactID, string strProdID, object userState) {
            if ((this.ClientInvoiceLastRegisteredOperationCompleted == null)) {
                this.ClientInvoiceLastRegisteredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientInvoiceLastRegisteredOperationCompleted);
            }
            this.InvokeAsync("ClientInvoiceLastRegistered", new object[] {
                        intContactID,
                        strProdID}, this.ClientInvoiceLastRegisteredOperationCompleted, userState);
        }
        
        private void OnClientInvoiceLastRegisteredOperationCompleted(object arg) {
            if ((this.ClientInvoiceLastRegisteredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientInvoiceLastRegisteredCompleted(this, new ClientInvoiceLastRegisteredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientOrderConfirmationEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ClientOrderConfirmationEmail(System.Data.DataSet dsProducts, decimal dciTax, decimal dciTotal, int intInvoiceNumber, string strPaymentMethod, string strToName, string EmailAddress, string strInvoiceAddress) {
            object[] results = this.Invoke("ClientOrderConfirmationEmail", new object[] {
                        dsProducts,
                        dciTax,
                        dciTotal,
                        intInvoiceNumber,
                        strPaymentMethod,
                        strToName,
                        EmailAddress,
                        strInvoiceAddress});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ClientOrderConfirmationEmailAsync(System.Data.DataSet dsProducts, decimal dciTax, decimal dciTotal, int intInvoiceNumber, string strPaymentMethod, string strToName, string EmailAddress, string strInvoiceAddress) {
            this.ClientOrderConfirmationEmailAsync(dsProducts, dciTax, dciTotal, intInvoiceNumber, strPaymentMethod, strToName, EmailAddress, strInvoiceAddress, null);
        }
        
        /// <remarks/>
        public void ClientOrderConfirmationEmailAsync(System.Data.DataSet dsProducts, decimal dciTax, decimal dciTotal, int intInvoiceNumber, string strPaymentMethod, string strToName, string EmailAddress, string strInvoiceAddress, object userState) {
            if ((this.ClientOrderConfirmationEmailOperationCompleted == null)) {
                this.ClientOrderConfirmationEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientOrderConfirmationEmailOperationCompleted);
            }
            this.InvokeAsync("ClientOrderConfirmationEmail", new object[] {
                        dsProducts,
                        dciTax,
                        dciTotal,
                        intInvoiceNumber,
                        strPaymentMethod,
                        strToName,
                        EmailAddress,
                        strInvoiceAddress}, this.ClientOrderConfirmationEmailOperationCompleted, userState);
        }
        
        private void OnClientOrderConfirmationEmailOperationCompleted(object arg) {
            if ((this.ClientOrderConfirmationEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientOrderConfirmationEmailCompleted(this, new ClientOrderConfirmationEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientOrderConfirmationEmail2_Test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ClientOrderConfirmationEmail2_Test(object[] products, decimal dciTax, decimal dciTotal, int intInvoiceNumber, string strPaymentMethod, string strToName, string EmailAddress, string strCurrency) {
            object[] results = this.Invoke("ClientOrderConfirmationEmail2_Test", new object[] {
                        products,
                        dciTax,
                        dciTotal,
                        intInvoiceNumber,
                        strPaymentMethod,
                        strToName,
                        EmailAddress,
                        strCurrency});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ClientOrderConfirmationEmail2_TestAsync(object[] products, decimal dciTax, decimal dciTotal, int intInvoiceNumber, string strPaymentMethod, string strToName, string EmailAddress, string strCurrency) {
            this.ClientOrderConfirmationEmail2_TestAsync(products, dciTax, dciTotal, intInvoiceNumber, strPaymentMethod, strToName, EmailAddress, strCurrency, null);
        }
        
        /// <remarks/>
        public void ClientOrderConfirmationEmail2_TestAsync(object[] products, decimal dciTax, decimal dciTotal, int intInvoiceNumber, string strPaymentMethod, string strToName, string EmailAddress, string strCurrency, object userState) {
            if ((this.ClientOrderConfirmationEmail2_TestOperationCompleted == null)) {
                this.ClientOrderConfirmationEmail2_TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientOrderConfirmationEmail2_TestOperationCompleted);
            }
            this.InvokeAsync("ClientOrderConfirmationEmail2_Test", new object[] {
                        products,
                        dciTax,
                        dciTotal,
                        intInvoiceNumber,
                        strPaymentMethod,
                        strToName,
                        EmailAddress,
                        strCurrency}, this.ClientOrderConfirmationEmail2_TestOperationCompleted, userState);
        }
        
        private void OnClientOrderConfirmationEmail2_TestOperationCompleted(object arg) {
            if ((this.ClientOrderConfirmationEmail2_TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientOrderConfirmationEmail2_TestCompleted(this, new ClientOrderConfirmationEmail2_TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientOrderConfirmationEmail2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ClientOrderConfirmationEmail2(object[] products, decimal dciTax, decimal dciTotal, int intInvoiceNumber, string strPaymentMethod, string strToName, string EmailAddress, string strCurrency, string strInvoiceAddress) {
            object[] results = this.Invoke("ClientOrderConfirmationEmail2", new object[] {
                        products,
                        dciTax,
                        dciTotal,
                        intInvoiceNumber,
                        strPaymentMethod,
                        strToName,
                        EmailAddress,
                        strCurrency,
                        strInvoiceAddress});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ClientOrderConfirmationEmail2Async(object[] products, decimal dciTax, decimal dciTotal, int intInvoiceNumber, string strPaymentMethod, string strToName, string EmailAddress, string strCurrency, string strInvoiceAddress) {
            this.ClientOrderConfirmationEmail2Async(products, dciTax, dciTotal, intInvoiceNumber, strPaymentMethod, strToName, EmailAddress, strCurrency, strInvoiceAddress, null);
        }
        
        /// <remarks/>
        public void ClientOrderConfirmationEmail2Async(object[] products, decimal dciTax, decimal dciTotal, int intInvoiceNumber, string strPaymentMethod, string strToName, string EmailAddress, string strCurrency, string strInvoiceAddress, object userState) {
            if ((this.ClientOrderConfirmationEmail2OperationCompleted == null)) {
                this.ClientOrderConfirmationEmail2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientOrderConfirmationEmail2OperationCompleted);
            }
            this.InvokeAsync("ClientOrderConfirmationEmail2", new object[] {
                        products,
                        dciTax,
                        dciTotal,
                        intInvoiceNumber,
                        strPaymentMethod,
                        strToName,
                        EmailAddress,
                        strCurrency,
                        strInvoiceAddress}, this.ClientOrderConfirmationEmail2OperationCompleted, userState);
        }
        
        private void OnClientOrderConfirmationEmail2OperationCompleted(object arg) {
            if ((this.ClientOrderConfirmationEmail2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientOrderConfirmationEmail2Completed(this, new ClientOrderConfirmationEmail2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientProductInterested", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ClientProductInterested(int intContactID) {
            object[] results = this.Invoke("ClientProductInterested", new object[] {
                        intContactID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ClientProductInterestedAsync(int intContactID) {
            this.ClientProductInterestedAsync(intContactID, null);
        }
        
        /// <remarks/>
        public void ClientProductInterestedAsync(int intContactID, object userState) {
            if ((this.ClientProductInterestedOperationCompleted == null)) {
                this.ClientProductInterestedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientProductInterestedOperationCompleted);
            }
            this.InvokeAsync("ClientProductInterested", new object[] {
                        intContactID}, this.ClientProductInterestedOperationCompleted, userState);
        }
        
        private void OnClientProductInterestedOperationCompleted(object arg) {
            if ((this.ClientProductInterestedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientProductInterestedCompleted(this, new ClientProductInterestedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientSubmitOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClientSubmitOrder(int intContactID, System.Data.DataSet dsProducts, decimal dciTotalPriceExGST, decimal dciGSTPercent, string strNote) {
            object[] results = this.Invoke("ClientSubmitOrder", new object[] {
                        intContactID,
                        dsProducts,
                        dciTotalPriceExGST,
                        dciGSTPercent,
                        strNote});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClientSubmitOrderAsync(int intContactID, System.Data.DataSet dsProducts, decimal dciTotalPriceExGST, decimal dciGSTPercent, string strNote) {
            this.ClientSubmitOrderAsync(intContactID, dsProducts, dciTotalPriceExGST, dciGSTPercent, strNote, null);
        }
        
        /// <remarks/>
        public void ClientSubmitOrderAsync(int intContactID, System.Data.DataSet dsProducts, decimal dciTotalPriceExGST, decimal dciGSTPercent, string strNote, object userState) {
            if ((this.ClientSubmitOrderOperationCompleted == null)) {
                this.ClientSubmitOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientSubmitOrderOperationCompleted);
            }
            this.InvokeAsync("ClientSubmitOrder", new object[] {
                        intContactID,
                        dsProducts,
                        dciTotalPriceExGST,
                        dciGSTPercent,
                        strNote}, this.ClientSubmitOrderOperationCompleted, userState);
        }
        
        private void OnClientSubmitOrderOperationCompleted(object arg) {
            if ((this.ClientSubmitOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientSubmitOrderCompleted(this, new ClientSubmitOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientSubmitOrder2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ClientSubmitOrder2(int intClientContactID, object[] arrProdSubmitOrder, decimal dciGSTPercent, string strNote) {
            object[] results = this.Invoke("ClientSubmitOrder2", new object[] {
                        intClientContactID,
                        arrProdSubmitOrder,
                        dciGSTPercent,
                        strNote});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ClientSubmitOrder2Async(int intClientContactID, object[] arrProdSubmitOrder, decimal dciGSTPercent, string strNote) {
            this.ClientSubmitOrder2Async(intClientContactID, arrProdSubmitOrder, dciGSTPercent, strNote, null);
        }
        
        /// <remarks/>
        public void ClientSubmitOrder2Async(int intClientContactID, object[] arrProdSubmitOrder, decimal dciGSTPercent, string strNote, object userState) {
            if ((this.ClientSubmitOrder2OperationCompleted == null)) {
                this.ClientSubmitOrder2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientSubmitOrder2OperationCompleted);
            }
            this.InvokeAsync("ClientSubmitOrder2", new object[] {
                        intClientContactID,
                        arrProdSubmitOrder,
                        dciGSTPercent,
                        strNote}, this.ClientSubmitOrder2OperationCompleted, userState);
        }
        
        private void OnClientSubmitOrder2OperationCompleted(object arg) {
            if ((this.ClientSubmitOrder2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientSubmitOrder2Completed(this, new ClientSubmitOrder2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CurrencySelect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CurrencySelect() {
            object[] results = this.Invoke("CurrencySelect", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencySelectAsync() {
            this.CurrencySelectAsync(null);
        }
        
        /// <remarks/>
        public void CurrencySelectAsync(object userState) {
            if ((this.CurrencySelectOperationCompleted == null)) {
                this.CurrencySelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencySelectOperationCompleted);
            }
            this.InvokeAsync("CurrencySelect", new object[0], this.CurrencySelectOperationCompleted, userState);
        }
        
        private void OnCurrencySelectOperationCompleted(object arg) {
            if ((this.CurrencySelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencySelectCompleted(this, new CurrencySelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmailFooter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEmailFooter(string FileName) {
            object[] results = this.Invoke("GetEmailFooter", new object[] {
                        FileName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailFooterAsync(string FileName) {
            this.GetEmailFooterAsync(FileName, null);
        }
        
        /// <remarks/>
        public void GetEmailFooterAsync(string FileName, object userState) {
            if ((this.GetEmailFooterOperationCompleted == null)) {
                this.GetEmailFooterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailFooterOperationCompleted);
            }
            this.InvokeAsync("GetEmailFooter", new object[] {
                        FileName}, this.GetEmailFooterOperationCompleted, userState);
        }
        
        private void OnGetEmailFooterOperationCompleted(object arg) {
            if ((this.GetEmailFooterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailFooterCompleted(this, new GetEmailFooterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendMail(string subject, string to, string cc, string message, MailFormat format) {
            object[] results = this.Invoke("SendMail", new object[] {
                        subject,
                        to,
                        cc,
                        message,
                        format});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailAsync(string subject, string to, string cc, string message, MailFormat format) {
            this.SendMailAsync(subject, to, cc, message, format, null);
        }
        
        /// <remarks/>
        public void SendMailAsync(string subject, string to, string cc, string message, MailFormat format, object userState) {
            if ((this.SendMailOperationCompleted == null)) {
                this.SendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailOperationCompleted);
            }
            this.InvokeAsync("SendMail", new object[] {
                        subject,
                        to,
                        cc,
                        message,
                        format}, this.SendMailOperationCompleted, userState);
        }
        
        private void OnSendMailOperationCompleted(object arg) {
            if ((this.SendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailCompleted(this, new SendMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/zsValidateClientDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int zsValidateClientDelete(int intContactID) {
            object[] results = this.Invoke("zsValidateClientDelete", new object[] {
                        intContactID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void zsValidateClientDeleteAsync(int intContactID) {
            this.zsValidateClientDeleteAsync(intContactID, null);
        }
        
        /// <remarks/>
        public void zsValidateClientDeleteAsync(int intContactID, object userState) {
            if ((this.zsValidateClientDeleteOperationCompleted == null)) {
                this.zsValidateClientDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnzsValidateClientDeleteOperationCompleted);
            }
            this.InvokeAsync("zsValidateClientDelete", new object[] {
                        intContactID}, this.zsValidateClientDeleteOperationCompleted, userState);
        }
        
        private void OnzsValidateClientDeleteOperationCompleted(object arg) {
            if ((this.zsValidateClientDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.zsValidateClientDeleteCompleted(this, new zsValidateClientDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/zzDummy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void zzDummy(ProdSubmitOrder a) {
            this.Invoke("zzDummy", new object[] {
                        a});
        }
        
        /// <remarks/>
        public void zzDummyAsync(ProdSubmitOrder a) {
            this.zzDummyAsync(a, null);
        }
        
        /// <remarks/>
        public void zzDummyAsync(ProdSubmitOrder a, object userState) {
            if ((this.zzDummyOperationCompleted == null)) {
                this.zzDummyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnzzDummyOperationCompleted);
            }
            this.InvokeAsync("zzDummy", new object[] {
                        a}, this.zzDummyOperationCompleted, userState);
        }
        
        private void OnzzDummyOperationCompleted(object arg) {
            if ((this.zzDummyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.zzDummyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/zzstrDummy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsContactProductInterest zzstrDummy(string strDummy) {
            object[] results = this.Invoke("zzstrDummy", new object[] {
                        strDummy});
            return ((clsContactProductInterest)(results[0]));
        }
        
        /// <remarks/>
        public void zzstrDummyAsync(string strDummy) {
            this.zzstrDummyAsync(strDummy, null);
        }
        
        /// <remarks/>
        public void zzstrDummyAsync(string strDummy, object userState) {
            if ((this.zzstrDummyOperationCompleted == null)) {
                this.zzstrDummyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnzzstrDummyOperationCompleted);
            }
            this.InvokeAsync("zzstrDummy", new object[] {
                        strDummy}, this.zzstrDummyOperationCompleted, userState);
        }
        
        private void OnzzstrDummyOperationCompleted(object arg) {
            if ((this.zzstrDummyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.zzstrDummyCompleted(this, new zzstrDummyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientContactConcurrencySelect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClientContactConcurrencySelect(int ContactID) {
            object[] results = this.Invoke("ClientContactConcurrencySelect", new object[] {
                        ContactID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClientContactConcurrencySelectAsync(int ContactID) {
            this.ClientContactConcurrencySelectAsync(ContactID, null);
        }
        
        /// <remarks/>
        public void ClientContactConcurrencySelectAsync(int ContactID, object userState) {
            if ((this.ClientContactConcurrencySelectOperationCompleted == null)) {
                this.ClientContactConcurrencySelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientContactConcurrencySelectOperationCompleted);
            }
            this.InvokeAsync("ClientContactConcurrencySelect", new object[] {
                        ContactID}, this.ClientContactConcurrencySelectOperationCompleted, userState);
        }
        
        private void OnClientContactConcurrencySelectOperationCompleted(object arg) {
            if ((this.ClientContactConcurrencySelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientContactConcurrencySelectCompleted(this, new ClientContactConcurrencySelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientContactHideOnWebSelect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsContactHideOnWeb ClientContactHideOnWebSelect(string Email) {
            object[] results = this.Invoke("ClientContactHideOnWebSelect", new object[] {
                        Email});
            return ((clsContactHideOnWeb)(results[0]));
        }
        
        /// <remarks/>
        public void ClientContactHideOnWebSelectAsync(string Email) {
            this.ClientContactHideOnWebSelectAsync(Email, null);
        }
        
        /// <remarks/>
        public void ClientContactHideOnWebSelectAsync(string Email, object userState) {
            if ((this.ClientContactHideOnWebSelectOperationCompleted == null)) {
                this.ClientContactHideOnWebSelectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientContactHideOnWebSelectOperationCompleted);
            }
            this.InvokeAsync("ClientContactHideOnWebSelect", new object[] {
                        Email}, this.ClientContactHideOnWebSelectOperationCompleted, userState);
        }
        
        private void OnClientContactHideOnWebSelectOperationCompleted(object arg) {
            if ((this.ClientContactHideOnWebSelectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientContactHideOnWebSelectCompleted(this, new ClientContactHideOnWebSelectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientContactHideOnWebUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClientContactHideOnWebUpdate(int ContactID, int HideOnWeb) {
            this.Invoke("ClientContactHideOnWebUpdate", new object[] {
                        ContactID,
                        HideOnWeb});
        }
        
        /// <remarks/>
        public void ClientContactHideOnWebUpdateAsync(int ContactID, int HideOnWeb) {
            this.ClientContactHideOnWebUpdateAsync(ContactID, HideOnWeb, null);
        }
        
        /// <remarks/>
        public void ClientContactHideOnWebUpdateAsync(int ContactID, int HideOnWeb, object userState) {
            if ((this.ClientContactHideOnWebUpdateOperationCompleted == null)) {
                this.ClientContactHideOnWebUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientContactHideOnWebUpdateOperationCompleted);
            }
            this.InvokeAsync("ClientContactHideOnWebUpdate", new object[] {
                        ContactID,
                        HideOnWeb}, this.ClientContactHideOnWebUpdateOperationCompleted, userState);
        }
        
        private void OnClientContactHideOnWebUpdateOperationCompleted(object arg) {
            if ((this.ClientContactHideOnWebUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientContactHideOnWebUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientPurchasedProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientPurchasedProducts(int contactID) {
            object[] results = this.Invoke("GetClientPurchasedProducts", new object[] {
                        contactID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientPurchasedProductsAsync(int contactID) {
            this.GetClientPurchasedProductsAsync(contactID, null);
        }
        
        /// <remarks/>
        public void GetClientPurchasedProductsAsync(int contactID, object userState) {
            if ((this.GetClientPurchasedProductsOperationCompleted == null)) {
                this.GetClientPurchasedProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientPurchasedProductsOperationCompleted);
            }
            this.InvokeAsync("GetClientPurchasedProducts", new object[] {
                        contactID}, this.GetClientPurchasedProductsOperationCompleted, userState);
        }
        
        private void OnGetClientPurchasedProductsOperationCompleted(object arg) {
            if ((this.GetClientPurchasedProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientPurchasedProductsCompleted(this, new GetClientPurchasedProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsContactFullDetails {
        
        private string emailField;
        
        private string firstNameField;
        
        private string surnameField;
        
        private string coNameField;
        
        private string positionField;
        
        private string industryField;
        
        private string address_Line1Field;
        
        private string address_Line2Field;
        
        private string suburbField;
        
        private string stateField;
        
        private string postcodeField;
        
        private string countryField;
        
        private string pAddress_Line1Field;
        
        private string pAddress_Line2Field;
        
        private string pSuburbField;
        
        private string pStateField;
        
        private string pPostcodeField;
        
        private string pCountryField;
        
        private string phoneWField;
        
        private string faxWField;
        
        private string phoneHField;
        
        private string faxHField;
        
        private string phoneOtherField;
        
        private string wWWField;
        
        private string referredByField;
        
        private int referredByCategoryField;
        
        private string searchEngineField;
        
        private string noteField;
        
        private string offMailingEmailField;
        
        private string offMailingPostalField;
        
        private string offMailingFaxField;
        
        private string currencyIDField;
        
        private int concurrencyField;
        
        private string passwordField;
        
        private string dateUpdatedField;
        
        private string employeeCountField;
        
        private string timeZoneField;
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string CoName {
            get {
                return this.coNameField;
            }
            set {
                this.coNameField = value;
            }
        }
        
        /// <remarks/>
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string Industry {
            get {
                return this.industryField;
            }
            set {
                this.industryField = value;
            }
        }
        
        /// <remarks/>
        public string Address_Line1 {
            get {
                return this.address_Line1Field;
            }
            set {
                this.address_Line1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address_Line2 {
            get {
                return this.address_Line2Field;
            }
            set {
                this.address_Line2Field = value;
            }
        }
        
        /// <remarks/>
        public string Suburb {
            get {
                return this.suburbField;
            }
            set {
                this.suburbField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Postcode {
            get {
                return this.postcodeField;
            }
            set {
                this.postcodeField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string PAddress_Line1 {
            get {
                return this.pAddress_Line1Field;
            }
            set {
                this.pAddress_Line1Field = value;
            }
        }
        
        /// <remarks/>
        public string PAddress_Line2 {
            get {
                return this.pAddress_Line2Field;
            }
            set {
                this.pAddress_Line2Field = value;
            }
        }
        
        /// <remarks/>
        public string PSuburb {
            get {
                return this.pSuburbField;
            }
            set {
                this.pSuburbField = value;
            }
        }
        
        /// <remarks/>
        public string PState {
            get {
                return this.pStateField;
            }
            set {
                this.pStateField = value;
            }
        }
        
        /// <remarks/>
        public string PPostcode {
            get {
                return this.pPostcodeField;
            }
            set {
                this.pPostcodeField = value;
            }
        }
        
        /// <remarks/>
        public string PCountry {
            get {
                return this.pCountryField;
            }
            set {
                this.pCountryField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneW {
            get {
                return this.phoneWField;
            }
            set {
                this.phoneWField = value;
            }
        }
        
        /// <remarks/>
        public string FaxW {
            get {
                return this.faxWField;
            }
            set {
                this.faxWField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneH {
            get {
                return this.phoneHField;
            }
            set {
                this.phoneHField = value;
            }
        }
        
        /// <remarks/>
        public string FaxH {
            get {
                return this.faxHField;
            }
            set {
                this.faxHField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneOther {
            get {
                return this.phoneOtherField;
            }
            set {
                this.phoneOtherField = value;
            }
        }
        
        /// <remarks/>
        public string WWW {
            get {
                return this.wWWField;
            }
            set {
                this.wWWField = value;
            }
        }
        
        /// <remarks/>
        public string ReferredBy {
            get {
                return this.referredByField;
            }
            set {
                this.referredByField = value;
            }
        }
        
        /// <remarks/>
        public int ReferredByCategory {
            get {
                return this.referredByCategoryField;
            }
            set {
                this.referredByCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string SearchEngine {
            get {
                return this.searchEngineField;
            }
            set {
                this.searchEngineField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public string OffMailingEmail {
            get {
                return this.offMailingEmailField;
            }
            set {
                this.offMailingEmailField = value;
            }
        }
        
        /// <remarks/>
        public string OffMailingPostal {
            get {
                return this.offMailingPostalField;
            }
            set {
                this.offMailingPostalField = value;
            }
        }
        
        /// <remarks/>
        public string OffMailingFax {
            get {
                return this.offMailingFaxField;
            }
            set {
                this.offMailingFaxField = value;
            }
        }
        
        /// <remarks/>
        public string CurrencyID {
            get {
                return this.currencyIDField;
            }
            set {
                this.currencyIDField = value;
            }
        }
        
        /// <remarks/>
        public int Concurrency {
            get {
                return this.concurrencyField;
            }
            set {
                this.concurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string EmployeeCount {
            get {
                return this.employeeCountField;
            }
            set {
                this.employeeCountField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsContactHideOnWeb {
        
        private int contactIDField;
        
        private int hideOnWebField;
        
        /// <remarks/>
        public int ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public int HideOnWeb {
            get {
                return this.hideOnWebField;
            }
            set {
                this.hideOnWebField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsContactProductInterest {
        
        private string productIDField;
        
        private bool interestedField;
        
        /// <remarks/>
        public string ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        public bool Interested {
            get {
                return this.interestedField;
            }
            set {
                this.interestedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProdSubmitOrder {
        
        private string prodIDField;
        
        private string downloadIDField;
        
        private int quantityField;
        
        private double discountPercentField;
        
        /// <remarks/>
        public string ProdID {
            get {
                return this.prodIDField;
            }
            set {
                this.prodIDField = value;
            }
        }
        
        /// <remarks/>
        public string DownloadID {
            get {
                return this.downloadIDField;
            }
            set {
                this.downloadIDField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public double DiscountPercent {
            get {
                return this.discountPercentField;
            }
            set {
                this.discountPercentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CoBool {
        
        private bool isSuccessfulField;
        
        private string failMessageField;
        
        /// <remarks/>
        public bool IsSuccessful {
            get {
                return this.isSuccessfulField;
            }
            set {
                this.isSuccessfulField = value;
            }
        }
        
        /// <remarks/>
        public string FailMessage {
            get {
                return this.failMessageField;
            }
            set {
                this.failMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsReferralSource {
        
        private int referralSourceIDField;
        
        private string referralSourceTextField;
        
        /// <remarks/>
        public int ReferralSourceID {
            get {
                return this.referralSourceIDField;
            }
            set {
                this.referralSourceIDField = value;
            }
        }
        
        /// <remarks/>
        public string ReferralSourceText {
            get {
                return this.referralSourceTextField;
            }
            set {
                this.referralSourceTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsContactSmallDetails {
        
        private string emailField;
        
        private string firstNameField;
        
        private string surnameField;
        
        private string dateUpdatedField;
        
        private string referredByField;
        
        private string countryField;
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public string DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string ReferredBy {
            get {
                return this.referredByField;
            }
            set {
                this.referredByField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum MailFormat {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Html,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientDetailCompletedEventHandler(object sender, ClientDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsContactFullDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsContactFullDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientEmailExistSelectCompletedEventHandler(object sender, ClientEmailExistSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientEmailExistSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientEmailExistSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientProductIntrestedUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientContactLoginSelectCompletedEventHandler(object sender, ClientContactLoginSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientContactLoginSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientContactLoginSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientUpdateCompletedEventHandler(object sender, ClientUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bolConcurrencyCheck {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientRemoveCompletedEventHandler(object sender, ClientRemoveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientRemoveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientRemoveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientSmallDetailCompletedEventHandler(object sender, ClientSmallDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientSmallDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientSmallDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsContactSmallDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsContactSmallDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetClientIDCompletedEventHandler(object sender, GetClientIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetReferralSourceListCompletedEventHandler(object sender, GetReferralSourceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferralSourceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferralSourceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsReferralSource[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsReferralSource[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendPasswordReminderEmailCompletedEventHandler(object sender, SendPasswordReminderEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPasswordReminderEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPasswordReminderEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CoBool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CoBool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientSendPasswordReminderEmailCompletedEventHandler(object sender, ClientSendPasswordReminderEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientSendPasswordReminderEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientSendPasswordReminderEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientSendUpdateDetailsReminderEmailCompletedEventHandler(object sender, ClientSendUpdateDetailsReminderEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientSendUpdateDetailsReminderEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientSendUpdateDetailsReminderEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void zsValidateClientDetailCompletedEventHandler(object sender, zsValidateClientDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class zsValidateClientDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal zsValidateClientDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsContactFullDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsContactFullDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientContactCurrencyIDSelectCompletedEventHandler(object sender, ClientContactCurrencyIDSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientContactCurrencyIDSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientContactCurrencyIDSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientContactCurrencyIDUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientContactPrimaryContactUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientDiaryCategoryNoteTextCompletedEventHandler(object sender, ClientDiaryCategoryNoteTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientDiaryCategoryNoteTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientDiaryCategoryNoteTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientDiaryInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientDiaryInsertWithClientTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientInvoiceLastRegisteredCompletedEventHandler(object sender, ClientInvoiceLastRegisteredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientInvoiceLastRegisteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientInvoiceLastRegisteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientOrderConfirmationEmailCompletedEventHandler(object sender, ClientOrderConfirmationEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientOrderConfirmationEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientOrderConfirmationEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientOrderConfirmationEmail2_TestCompletedEventHandler(object sender, ClientOrderConfirmationEmail2_TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientOrderConfirmationEmail2_TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientOrderConfirmationEmail2_TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientOrderConfirmationEmail2CompletedEventHandler(object sender, ClientOrderConfirmationEmail2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientOrderConfirmationEmail2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientOrderConfirmationEmail2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientProductInterestedCompletedEventHandler(object sender, ClientProductInterestedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientProductInterestedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientProductInterestedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientSubmitOrderCompletedEventHandler(object sender, ClientSubmitOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientSubmitOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientSubmitOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientSubmitOrder2CompletedEventHandler(object sender, ClientSubmitOrder2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientSubmitOrder2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientSubmitOrder2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CurrencySelectCompletedEventHandler(object sender, CurrencySelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencySelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencySelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEmailFooterCompletedEventHandler(object sender, GetEmailFooterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailFooterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailFooterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendMailCompletedEventHandler(object sender, SendMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void zsValidateClientDeleteCompletedEventHandler(object sender, zsValidateClientDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class zsValidateClientDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal zsValidateClientDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void zzDummyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void zzstrDummyCompletedEventHandler(object sender, zzstrDummyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class zzstrDummyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal zzstrDummyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsContactProductInterest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsContactProductInterest)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientContactConcurrencySelectCompletedEventHandler(object sender, ClientContactConcurrencySelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientContactConcurrencySelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientContactConcurrencySelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientContactHideOnWebSelectCompletedEventHandler(object sender, ClientContactHideOnWebSelectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientContactHideOnWebSelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientContactHideOnWebSelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsContactHideOnWeb Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsContactHideOnWeb)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ClientContactHideOnWebUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetClientPurchasedProductsCompletedEventHandler(object sender, GetClientPurchasedProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientPurchasedProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientPurchasedProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591